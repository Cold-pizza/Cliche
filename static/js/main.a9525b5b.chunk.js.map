{"version":3,"sources":["firebase.tsx","components/signup.tsx","components/login.tsx","components/main.tsx","components/setting.tsx","components/musiclist.tsx","components/addMusic.tsx","App.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","SignUp","props","email","account","password","history","useHistory","id","type","name","value","onChange","placeholder","onClick","createUser","alert","push","className","replace","StyledLink","styled","Link","Login","login","to","Main","useEffect","music","length","source","current","src","nextNum","url","musicImg","alt","title","singer","preload","controls","ref","player","Setting","useState","isBtn","setIsBtn","logout","MusicList","map","i","removeModal","musicFileName","active","removeMusic","htmlFor","style","display","on","upLoadMusic","fileRef","onChangeMusic","AddMusic","check","setCheck","color","Nav","site","navList","exact","path","width","fileInitial","goBack","Actions","volControl","changeMusic","beforeMusic","play","musicControl","pauseTheMusic","playTheMusic","nextMusic","withRouter","setAccount","e","target","setMusic","num","setNextNum","load","useRef","setPlay","setOn","musicFile","setFiles","storage","setMusicFileName","nextId","setNextId","auth","signInWithEmailAndPassword","then","res","getMusic","a","arr","firestore","collection","get","snapshot","forEach","doc","data","console","log","catch","createUserWithEmailAndPassword","pause","vol","volume","keyDownMusic","window","event","key","signOut","files","fileNames","split","upLoading","child","put","loading","error","getDownloadURL","musicName","set","list","db","uid","delete","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.a9525b5b.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDJMIeMggOEkzvvmzFp4FffCYXRd5_EXnY\",\n  authDomain: \"cilche-prototype.firebaseapp.com\",\n  projectId: \"cilche-prototype\",\n  storageBucket: \"cilche-prototype.appspot.com\",\n  messagingSenderId: \"529483602235\",\n  appId: \"1:529483602235:web:bdc665b2d901d9b5b6ff1e\",\n};\n\n// Initialize Firebase\nexport default firebase.initializeApp(firebaseConfig);\n","import { SignUpIprops } from \"../App\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"../styles/signup.scss\";\n\nconst SignUp: React.FC<SignUpIprops> = function (props): JSX.Element {\n  const email = props.account.email;\n  const password = props.account.password;\n  const history = useHistory();\n\n  return (\n    <div id=\"sign-up\">\n      <h1>회원가입</h1>\n      <form>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={props.onChange}\n          id=\"id\"\n          placeholder=\"Email\"\n        />\n        <input\n          type=\"text\"\n          name=\"password\"\n          value={password}\n          onChange={props.onChange}\n          id=\"password\"\n          placeholder=\"PASSWORD\"\n        />\n        <button\n          onClick={() => {\n            props.createUser(email, password);\n            alert('가입 성공')\n            history.push('/');\n          }}\n          className=\"signup-btn\"\n        >\n          가입하기\n        </button>\n        <button\n          onClick={() => {\n            history.replace(\"/\");\n          }}\n          className=\"cancel-btn\"\n        >\n          취소\n        </button>\n      </form>\n      <div className=\"other-signup\"></div>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import \"../styles/login.scss\";\nimport firebase from \"../firebase\";\nimport { Link } from \"react-router-dom\";\nimport { LoginIprops } from \"../App\";\nimport styled from \"styled-components\";\nconst StyledLink = styled(Link)`\n  test-decoration: none;\n  color: black;\n`;\n\nconst Login: React.FC<LoginIprops> = function (props): JSX.Element {\n  const email = props.account.email;\n  const password = props.account.password;\n  return (\n    <div id=\"login\">\n      <section className=\"login-form\">\n        <h1>Cliche</h1>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={props.onChange}\n          id=\"id\"\n          placeholder=\"ID or Email\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={props.onChange}\n          id=\"password\"\n          placeholder=\"Password\"\n        />\n        <button\n          onClick={() => {\n            props.login(email, password);\n          }}\n          className=\"login-btn\"\n        >\n          로그인\n        </button>\n        <StyledLink to=\"/signup\">\n          <button className=\"signup-btn\">회원가입</button>\n        </StyledLink>\n      </section>\n    </div>\n  );\n};\n\nexport default Login;\n","import \"../styles/main.scss\";\nimport { useEffect } from \"react\";\nimport { MainIprops } from \"../App\";\n\n\nconst Main: React.FC<MainIprops> = function (props): JSX.Element {\n\n  // 다음 곡, 이전 곡 누를 때마다 audio src 변경.\n    useEffect(()=>{\n      if (props.music.length !== 0) {\n        props.source.current.src = props.music[props.nextNum].url;\n      }\n  })\n  // console.log(props.player.controls);\n  // console.log(props.player.current.duration);\n  return (\n    <div id=\"main\">\n      <section className=\"display-music\">\n        <div className=\"picture\">\n          <img src={props.musicImg[props.nextNum]} alt={props.musicImg[props.nextNum]} />\n          </div>\n        <span className=\"title\">\n          { props.music.length === 0 ? null : props.music[props.nextNum].title }\n        </span>\n        <span className=\"singer\">\n          { props.music.length === 0 ? null : props.music[props.nextNum].singer }\n        </span>\n      </section>\n      <div className=\"time-line\">\n        <p className=\"current-time\">0</p>\n        <p className=\"duration\">0</p>\n      </div>\n      <audio preload=\"auto\" controls className=\"music-player\" ref={props.player}>\n        <source\n        ref={props.source}\n        src=\"\"\n          type=\"audio/mp3\"\n          // src=\"https://firebasestorage.googleapis.com/v0/b/cilche-prototype.appspot.com/o/music%2FGlen%20Check-84.mp3?alt=media&token=c02e6ed7-ae05-4eb7-824b-15563fd8bc38\"\n        />\n      </audio>\n    </div>\n  );\n};\n\nexport default Main;\n","import \"../styles/setting.scss\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { SettingIprops } from \"../App\";\n\nconst Setting: React.FC<SettingIprops> = function (props): JSX.Element {\n  const history = useHistory();\n  const [isBtn, setIsBtn] = useState(false);\n  return (\n    <div id=\"setting\">\n      <ul>\n        <li\n          onClick={() => {\n            history.push(\"/setting/musiclist\");\n          }}\n        >\n          곡정보\n        </li>\n        <li\n          onClick={() => {\n            setIsBtn(!isBtn);\n          }}\n        >\n          로그아웃\n        </li>\n      </ul>\n      { isBtn === true ?  <div className=\"logout-form\">\n        <p>로그아웃 하시겠습니까?</p>\n        <div className=\"btns\">\n        <button  onClick={() => {\n            props.logout();\n          }} className=\"yes\">Yes</button>\n        <button onClick={()=>{\n          setIsBtn(!isBtn);\n        }} className=\"no\">No</button>\n        </div>\n      </div> : null }\n     \n    </div>\n  );\n};\n\nexport default Setting;\n","import \"../styles/musiclist.scss\";\nimport { MusicListIprops } from \"../App\";\nimport { useState } from \"react\";\n\n\n\nconst MusicList: React.FC<MusicListIprops> = function (props): JSX.Element {\n  const [isBtn, setIsBtn] = useState(true);\n\n  return (\n    <div id=\"music-list\">\n      {props.music.map(({ title, singer, id }, i) => {\n        return (\n          <section className=\"item\">\n            <div className=\"sing-info\">\n              <div className=\"image\">\n                <img src={props.musicImg[i]} alt={props.musicImg[i]} />\n              </div>\n              <div> \n                <p>{title}</p>\n                <span>{singer}</span>\n              </div>\n            </div>\n            <i className=\"fas fa-minus remove-btn\" onClick={()=>{\n              props.removeModal(id);\n            }}></i>\n          </section>\n        );\n      })}\n      { isBtn ? <div className=\"panel\">\n      <i className=\"fas fa-times x\" onClick={() => {\n        setIsBtn(!isBtn);\n      }} ></i>\n        <p>제목을 <span>\"가수이름\"-\"노래제목\"</span>으로된 파일을 업로드해주세요!</p>\n      </div> : null}\n      {\n        props.musicFileName !== null ? \n        <section className=\"file-name\">\n        <p>선택한 파일이름</p>\n        <span>{props.musicFileName}</span>\n      </section> : null\n      }\n      \n      {props.music.map(({ active,id, title })=> {\n        return(\n          active ? <div className=\"remove-music\">\n        <p>지우시겠습니까?</p>\n        <span>{ title }</span>\n        <div className=\"btns\">\n          <button onClick={()=>{\n            props.removeMusic(id);\n            props.removeModal(id);\n          }}>Yes</button>\n          <button onClick={()=>{\n            props.removeModal(id);\n          }}>No</button>\n        </div>\n      </div> : null  \n        )\n      })    \n      }\n      \n      <label id=\"label\" htmlFor=\"music-file\">\n        <i className=\"fas fa-plus plus-music\"></i>\n      </label>\n      <i\n        style={{ display: props.on ? \"block\" : \"none\" }}\n        className=\"fas fa-check plus-music\"\n        onClick={() => {\n          props.upLoadMusic();\n        }}\n      ></i>\n      <input type=\"file\" ref={props.fileRef} onChange={props.onChangeMusic} id=\"music-file\" />\n    </div>\n  );\n};\nexport default MusicList;\n","import \"../styles/addMusic.scss\";\nimport { useState } from \"react\";\nimport { AddMusicIprops } from \"../App\";\n\nconst AddMusic: React.FC<AddMusicIprops> = function (props): JSX.Element {\n  const [check, setCheck] = useState(false);\n  return (\n    <div id=\"add-music\">\n      {props.music.map((music) => {\n        return (\n          <section className=\"item\">\n            <div className=\"music-info\">\n              <div className=\"image\"></div>\n              <div>\n                <p>{music.title}</p>\n                <span>{music.singer}</span>\n              </div>\n            </div>\n            <i\n              style={{\n                color: check === true ? \"#698eff\" : \"rgba(0, 0, 0, 0.5)\",\n              }}\n              className=\"fas fa-check check-box\"\n              onClick={() => {\n                setCheck(!check);\n              }}\n            ></i>\n          </section>\n        );\n      })}\n      <i className=\"fas fa-check plus-music\"></i>\n    </div>\n  );\n};\n\nexport default AddMusic;\n","import React, { useState, useRef } from \"react\";\nimport \"./App.scss\";\nimport { Route, withRouter, useHistory } from \"react-router-dom\";\nimport firebase from \"./firebase\";\n\n// import Component\nimport SignUp from \"./components/signup\";\nimport Login from \"./components/login\";\nimport Main from \"./components/main\";\nimport Setting from \"./components/setting\";\nimport MusicList from \"./components/musiclist\";\nimport AddMusic from \"./components/addMusic\";\n\nimport { DocumentData } from \"@google-cloud/firestore\";\n\n//useState type\ntype AccountType = {\n  email: string;\n  password: string;\n};\ntype MusicType = {\n  id: number;\n  title: string;\n  singer: string;\n  url: string;\n  active: boolean;\n}[];\ntype AnyType = any;\n\ntype MusicImg = string[];\n\n// 함수 type\ntype OnChangeType = (e: React.ChangeEvent<HTMLInputElement>) => void;\ntype CreateUserType = (email: string, password: string) => void;\ntype LoginType = (email: string, password: string) => void;\ntype LogOutType = () => void;\ntype OnModalType = (id: number) => void;\ntype UpLoadingType = () => void;\ntype PlayTheMusicType = () => void;\ntype PauseTheMusicType = () => void;\n\n// export signup.tsx\nexport interface SignUpIprops {\n  createUser: CreateUserType;\n  account: AccountType;\n  onChange: OnChangeType;\n}\n\n//export login.tsx\nexport interface LoginIprops {\n  login: LoginType;\n  account: AccountType;\n  onChange: OnChangeType;\n}\n\n//export playlist.tsx\nexport interface PlayListIprops {\n  onModal: OnModalType;\n}\n\n// export main.tsx\nexport interface MainIprops {\n  num: number;\n  nextNum: number;\n  music: MusicType;\n  player: AnyType;\n  source: AnyType;\n  fileInitial: ()=> void;\n  musicImg: MusicImg;\n}\n\n// Action 컴포넌트 컨트롤러 type\nexport interface ActionIprops {\n  changeMusic: {\n    nextMusic: () => void;\n    beforeMusic: () => void;\n  };\n  playTheMusic: PlayTheMusicType;\n  pauseTheMusic: PauseTheMusicType;\n  volControl: (vol: string) => void;\n  musicControl: () => void;\n  keyDownMusic: () => void;\n  play: boolean;\n}\n\n// musiclist.tsx\nexport interface MusicListIprops {\n  onChangeMusic: OnChangeType;\n  upLoadMusic: UpLoadingType;\n  on: boolean;\n  music: MusicType;\n  removeModal: (id:number) => void;\n  removeMusic: (id:number) => void;\n  fileRef: any;\n  musicFileName: string;\n  musicImg: MusicImg;\n}\n\n// setting.tsx\nexport interface SettingIprops {\n  logout: LogOutType;\n}\n\n// addMusic.tsx\nexport interface AddMusicIprops {\n  music: MusicType;\n}\n\n// App Component\nfunction App() {\n  const history = useHistory();\n  const [account, setAccount] = useState<AccountType>({ email: \"\", password: \"\" });\n\n  // input.value를 account state에 저장.\n  const onChange: SignUpIprops[\"onChange\"] = function (e) {\n    setAccount({ ...account, [e.target.name]: e.target.value });\n  };\n\n  // 계정만드는 함수❗️.\n  const createUser: SignUpIprops[\"createUser\"] = function (email, password) {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        setAccount({ email: \"\", password: \"\" });\n      })\n      .catch(() => {\n        alert(\"가입 실패\");\n      });\n  };\n\n  // 노래 앨범 이미지.\n  const [musicImg, setMusicImg] = useState<MusicImg>([\n    'https://github.com/cold-pizza/cliche/blob/master/public/images/dive.jpg?raw=true',\n    'https://github.com/cold-pizza/cliche/blob/master/public/images/youth!.jpg?raw=true', \n  'https://github.com/cold-pizza/cliche/blob/master/public/images/youth!.jpg?raw=true', \n  'https://github.com/cold-pizza/cliche/blob/master/public/images/humidifier.jpg?raw=true']);\n\n  // firebase에서 음악 받아온 보관소.\n  const [music, setMusic] = useState<MusicType>([]);\n\n  // 로그인 함수.\n  const login: LoginIprops[\"login\"] = function (email, password) {\n     firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(async (res) => {\n        console.log(res)\n        setAccount({ email: \"\", password: \"\" });\n        // 로그인 성공하면 데이터 불러오는 함수.\n        async function getMusic() {\n          let arr: { id:number; title: string; singer: string; url: string; active: boolean; }[] = [];\n          await firebase\n          .firestore()\n          .collection(\"playList\")\n          .get().then((snapshot) => {\n            snapshot.forEach((doc:DocumentData) => {\n              return arr.push(doc.data());\n            });\n          });\n          await setMusic(arr);\n        }\n       await getMusic();\n        console.log(\"로그인성공!\");\n       await history.push(\"/main\");\n        })\n        .catch(() => {\n          console.log(\"다시 입력해주세요..\");\n        });\n      };\n\n  //로그아웃 함수.\n  const logOut: SettingIprops[\"logout\"] = function () {\n    firebase\n      .auth()\n      .signOut()\n      .then((res) => {\n        console.log(res)\n        console.log(\"로그아웃 하셨습니다.\");\n        setOn(!on);\n        history.replace(\"/\");\n      });\n  };\n\n\n  // Main 컴포넌트 Action 버튼 조절 state.\n  let [num, setNum] = useState<MainIprops[\"num\"]>(0);\n  let [nextNum, setNextNum] = useState<MainIprops[\"nextNum\"]>(0);\n\n  // Music state 제거 모달 함수.\n  const removeModal:MusicListIprops['removeModal'] = function(id) {\n    setMusic(\n      music.map((list)=> {\n        return list.id === id ? { ...list, active: !list.active } : list;\n      })\n    )\n  }\n\n  // 노래 삭제 함수.\n  const removeMusic:MusicListIprops['removeMusic'] = function(id) {\n    const db = firebase.firestore().collection('playList');\n    const uid:string = music[id].singer+'-'+music[id].title;\n    if (music[id].active) {\n      db.doc(uid).delete().then(()=>{\n        console.log('success delete!');\n      }).catch(()=>{\n        console.log('something wrong');\n      })\n      }\n  }\n\n  // 다음곡, 이전곡 버튼기능.\n  const changeMusic: ActionIprops[\"changeMusic\"] = {\n    nextMusic: function () {\n      if (nextNum < music.length - 1) {\n        setNextNum(nextNum + 1);\n        player.current.load();\n      } else {\n        return nextNum;\n      }\n    },\n    beforeMusic: function () {\n      if (nextNum > 0) {\n        setNextNum(nextNum - 1);\n        player.current.load();\n      } else {\n        return nextNum;\n      }\n    },\n  };\n  // audio 지정 ref.\n  const player = useRef<AnyType>();\n  const source = useRef<AnyType>();\n\n  // 음악 볼륨 설정 함수.\n  const volControl:ActionIprops['volControl'] = function(vol) {\n    if (vol === 'up' && player.current.volume < 1) {\n    player.current.volume  += 0.1;\n    console.log(player.current.volume);\n  } else if (vol === 'down' && player.current.volume > 0.11) {\n      player.current.volume -= 0.1;\n      console.log(player.current.volume);\n  } else {\n    alert('최대 입니다.')\n    return false;\n  }\n  }\n\n\n  // 재생, 정지 아이콘.\n  const [play, setPlay] = useState<ActionIprops['play']>(false);\n\n  const musicControl = function() {\n    setPlay(!play);\n  }\n\n  // Action 컴포넌트 컨트롤러 플레이 함수.\n  const playTheMusic: PlayTheMusicType = function() {\n    // player.current.load();\n    player.current.play();\n\n  }\n  const pauseTheMusic: PauseTheMusicType = function() {\n    // player.current.load();\n    player.current.pause();\n  }\n    \n  const keyDownMusic: ActionIprops['keyDownMusic'] = function() {\n    const e:KeyboardEvent = window.event as KeyboardEvent;\n    if (e.key === 'Enter') {\n      setPlay(!play); \n      if (play === true) {\n        player.current.play();\n      }\n      if (play === false) {\n        player.current.pause();\n      }\n    }\n  }\n\n  // 음악 저장하고 체크하는 버튼state.\n  const [on, setOn] = useState<MusicListIprops[\"on\"]>(false);\n  // 노래 저장하기.\n  const [musicFile, setFiles] = useState(null);\n  // firebase storage.\n  const storage = firebase.storage();\n  // 노래파일 선택 ref.\n  const fileRef = useRef<MusicListIprops[\"fileRef\"]>(null);\n  // 음악파일 제목 state.\n  const [musicFileName, setMusicFileName] = useState<MusicListIprops[\"musicFileName\"]>(\"\");\n  // 음악 파일 받아오는 함수 + 노래파일 이름 표시.\n  const onChangeMusic: OnChangeType = (e) => {\n    setFiles(e.target.files[0]);\n    setOn(!on);\n    if (fileRef !== null) {\n      const fileNameRef = fileRef.current.value;\n      const fileNames = fileNameRef.split(\"\\\\\")[2];\n      setMusicFileName(fileNames);\n    }\n  };\n\n  // 음악 id.\n  let [nextId, setNextId] = useState<number>(0);\n\n  // 🎵노래 업로드 기능🎵.(firestore에 text로 저장하기)\n  const upLoadMusic: UpLoadingType = function () {\n    const storageRef = storage.ref();\n    const downLoadPath = storageRef.child(\"music/\" + musicFile.name);\n    const upLoading = downLoadPath.put(musicFile);\n    upLoading.on(\n      \"state_changed\",\n      // 변화할 때, 동작하는 함수.\n      (loading) => {\n        console.log(\"로딩중..\", loading);\n      },\n      //에러시 동작하는 함수.\n      (error) => {\n        console.log(\"실패사유: \", error);\n      },\n      // 성공시 동작하는 함수.\n      () => {\n        upLoading.snapshot.ref.getDownloadURL().then((url) => {\n          console.log(\"업로드 성공!\");\n          setMusicFileName(null);\n          setOn(!on);\n          let musicName = musicFile.name.split('-')[1];\n          // firestore에 text로 저장.\n          const db = firebase.firestore();\n          db.collection(\"playList\")\n            .doc(musicFile.name)\n            .set({\n              title: musicName.split('.')[0],\n              singer: musicFile.name.split(\"-\")[0],\n              url: url,\n              active: false,\n              id: nextId,\n            });\n        });\n        setNextId(nextId + 1);\n      }\n    );\n  };\n\n  // 뒤로가기 클릭 시 파일 초기화 하는 함수.\n  const fileInitial:MainIprops[\"fileInitial\"] = function() {\n    setMusicFileName(null);\n    if (on) {\n      setOn(!on);\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Nav musicImg={musicImg} player={player} fileInitial={fileInitial} source={source} num={num} nextNum={nextNum} music={music} />\n      <Route exact path=\"/\">\n        <Login login={login} account={account} onChange={onChange} />\n      </Route>\n      <Route path=\"/signup\">\n        <SignUp\n         createUser={createUser}\n         account={account}\n          onChange={onChange}\n        />\n      </Route>\n      <Route path=\"/main\">\n        <Main \n        fileInitial={fileInitial}\n        musicImg={musicImg}\n          source={source} \n          player={player} \n          num={num} \n          nextNum={nextNum} \n          music={music} />\n        <Actions \n        play={play}\n        musicControl={musicControl}\n        playTheMusic={playTheMusic} \n        pauseTheMusic={pauseTheMusic} \n        changeMusic={changeMusic}\n        volControl={volControl}\n        keyDownMusic={keyDownMusic}\n         />\n      </Route>\n\n      <Route exact path=\"/setting\">\n        <Setting logout={logOut} />\n      </Route>\n\n      <Route path=\"/setting/addmusic/:id\">\n        <AddMusic music={music} />\n      </Route>\n      <Route path=\"/setting/musiclist\">\n        <MusicList\n          fileRef={fileRef}\n          onChangeMusic={onChangeMusic}\n          upLoadMusic={upLoadMusic}\n          on={on}\n          music={music}\n          removeModal={removeModal}\n          removeMusic={removeMusic}\n          musicFileName={musicFileName}\n          musicImg={musicImg}\n        />\n      </Route>\n    </div>\n  );\n}\n\n// Nav Components\nconst Nav: React.FC<MainIprops> = function (props): JSX.Element {\n  const history = useHistory();\n  const [navList, setNavList] = useState([\n    {\n      id: 0,\n      title: \"\",\n      site: \"/main\",\n    },\n    {\n      id: 1,\n      title: \"설정\",\n      site: \"/setting\",\n    },\n \n    {\n      id: 2,\n      title: \"버전정보\",\n      site: \"/setting/version\",\n    },\n    {\n      id: 3,\n      title: \"앨범\",\n      site: \"/setting/playlist\",\n    },\n    {\n      id: 4,\n      title: \"앨범편집\",\n      site: \"/setting/playlist/:id\",\n    },\n    {\n      id: 5,\n      title: \"곡 리스트\",\n      site: \"/setting/musiclist\",\n    },\n    {\n      id: 6,\n      title: \"앨범노래추가\",\n      site: \"/setting/addmusic/:id\",\n    },\n    {\n      id: 7,\n      title: \"앨범추가\",\n      site: \"/setting/addalbum\",\n    }\n  ]);\n  return (\n    <div id=\"nav\">\n      {navList.map((navList) => {\n        return (\n          <Route exact path={navList.site}>\n            <div style={{ width: '20px' }}>\n\n            { navList.site === '/main' ? null:<i\n              onClick={() => {\n                if (navList.site === '/setting/musiclist') {\n                  props.fileInitial();\n                }\n                history.goBack();\n              }}\n              className=\"fas fa-chevron-left\"\n              ></i>}\n              </div>\n            <span>\n              Cliche\n              {/* {navList.site === \"/main\"\n                ? (navList.title = props.album[props.num].title)\n                : navList.title} */}\n            </span>\n            <div style={{ width: '20px' }}>\n\n            {navList.site === \"/main\" ?\n              <i\n              onClick={() => {\n                history.push(\"/setting\");\n              }}\n              className=\"fas fa-cog edits\"\n              ></i>  : ( navList.site === \"/setting/playlist/:id\" ? <p className=\"edits\">완료</p> : null)}\n                  </div>\n          </Route>\n        );\n      })}\n    </div>\n  );\n};\n\nconst Actions: React.FC<ActionIprops> = function (props): JSX.Element {\n  const up:string = 'up';\n  const down:string = 'down';\n  \n  return (\n    <div id=\"actions\">\n      <section className=\"up-btn\">\n        <i\n          onClick={() => {\n            props.volControl(up);\n          }}\n          className=\"fas fa-chevron-up\"\n        ></i>\n      </section>\n      <section className=\"middle-btn\">\n        <i\n          onClick={() => {\n            props.changeMusic.beforeMusic();\n          }}\n          className=\"fas fa-chevron-left\"\n        ></i>\n        {props.play ? (\n          <i\n            onClick={() => {\n              props.musicControl();\n              props.pauseTheMusic();\n              // 누르면 오디오 플레이 버튼 조작하기.\n            }}\n            className=\"fas fa-pause play-btn pause\"\n          ></i>\n        ) : (\n          <i\n            onClick={() => {\n              props.musicControl();\n              props.playTheMusic();\n            }}\n            className=\"fas fa-play play-btn play\"\n          ></i>\n        )}\n\n        <i\n          onClick={() => {\n            props.changeMusic.nextMusic();\n          }}\n          className=\"fas fa-chevron-right\"\n        ></i>\n      </section>\n      <section className=\"bottom-btn\">\n        <i\n          onClick={() => {\n            props.volControl(down);\n          }}\n          className=\"fas fa-chevron-down\"\n        ></i>\n      </section>\n    </div>\n  );\n};\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"cliche\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}