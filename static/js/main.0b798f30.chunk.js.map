{"version":3,"sources":["firebase.tsx","components/signup.tsx","components/login.tsx","components/main.tsx","components/setting.tsx","components/version.tsx","components/albumEdit.tsx","components/musiclist.tsx","components/addMusic.tsx","components/addAlbum.tsx","App.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","SignUp","props","email","account","password","history","useHistory","id","type","name","value","onChange","placeholder","onClick","createUser","className","replace","StyledLink","styled","Link","Login","login","to","Main","useEffect","source","current","src","music","nextNum","url","title","singer","preload","controls","ref","player","Setting","useState","isBtn","setIsBtn","push","logout","Version","AlbumEdit","useParams","ids","Number","album","playList","map","MusicList","htmlFor","style","display","on","upLoadMusic","onChangeMusic","AddMusic","check","setCheck","color","AddAlbum","addAlbumState","onChangeAlbum","console","log","addAlbum","Nav","site","navList","exact","path","width","goBack","num","Actions","play","setPlay","changeAlbum","beforeAlbum","changeMusic","beforeMusic","pauseTheMusic","playTheMusic","nextMusic","nextAlbum","withRouter","setAccount","e","target","a","auth","createUserWithEmailAndPassword","then","catch","setMusic","setNum","setNextNum","info","active","setAlbum","setAddAlbumState","nextId","setNextId","length","load","useRef","setOn","musicFile","setFiles","storage","signInWithEmailAndPassword","getMusic","arr","firestore","collection","get","snapshot","forEach","doc","data","pause","signOut","files","upLoading","child","put","loading","error","getDownloadURL","set","split","item","test","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.0b798f30.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDJMIeMggOEkzvvmzFp4FffCYXRd5_EXnY\",\n  authDomain: \"cilche-prototype.firebaseapp.com\",\n  projectId: \"cilche-prototype\",\n  storageBucket: \"cilche-prototype.appspot.com\",\n  messagingSenderId: \"529483602235\",\n  appId: \"1:529483602235:web:bdc665b2d901d9b5b6ff1e\",\n};\n\n// Initialize Firebase\nexport default firebase.initializeApp(firebaseConfig);\n","import { SignUpIprops } from \"../App\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"../styles/signup.scss\";\n\nconst SignUp: React.FC<SignUpIprops> = function (props): JSX.Element {\n  const email = props.account.email;\n  const password = props.account.password;\n  const history = useHistory();\n\n  return (\n    <div id=\"sign-up\">\n      <h1>회원가입</h1>\n      <form>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={props.onChange}\n          id=\"id\"\n          placeholder=\"Email\"\n        />\n        <input\n          type=\"text\"\n          name=\"password\"\n          value={password}\n          onChange={props.onChange}\n          id=\"password\"\n          placeholder=\"PASSWORD\"\n        />\n        <button\n          onClick={() => {\n            props.createUser(email, password);\n          }}\n          className=\"signup-btn\"\n        >\n          가입하기\n        </button>\n        <button\n          onClick={() => {\n            history.replace(\"/\");\n          }}\n          className=\"cancel-btn\"\n        >\n          취소\n        </button>\n      </form>\n      <div className=\"other-signup\"></div>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import \"../styles/login.scss\";\nimport firebase from \"../firebase\";\nimport { Link } from \"react-router-dom\";\nimport { LoginIprops } from \"../App\";\nimport styled from \"styled-components\";\nconst StyledLink = styled(Link)`\n  test-decoration: none;\n  color: black;\n`;\n\nconst Login: React.FC<LoginIprops> = function (props): JSX.Element {\n  const email = props.account.email;\n  const password = props.account.password;\n  return (\n    <div id=\"login\">\n      <section className=\"login-form\">\n        <h1>Cliche</h1>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={props.onChange}\n          id=\"id\"\n          placeholder=\"ID or Email\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={props.onChange}\n          id=\"password\"\n          placeholder=\"Password\"\n        />\n        <button\n          onClick={() => {\n            props.login(email, password);\n          }}\n          className=\"login-btn\"\n        >\n          로그인\n        </button>\n        <StyledLink to=\"/signup\">\n          <button className=\"signup-btn\">회원가입</button>\n        </StyledLink>\n      </section>\n    </div>\n  );\n};\n\nexport default Login;\n","import \"../styles/main.scss\";\nimport { useEffect } from \"react\";\nimport { MainIprops } from \"../App\";\n\n\nconst Main: React.FC<MainIprops> = function (props): JSX.Element {\n\n  // 다음 곡, 이전 곡 누를 때마다 audio src 변경.\n  useEffect(()=>{\n    props.source.current.src = props.music[props.nextNum].url;\n  }, [props.nextNum])\n  // console.log(props.player.controls);\n  // console.log(props.player.current.duration);\n  return (\n    <div id=\"main\">\n      <section className=\"display-music\">\n        <div className=\"picture\">앨범을 선택해 주세요!</div>\n        <span className=\"title\">\n          {props.music[props.nextNum].title}\n        </span>\n        <span className=\"singer\">\n          {props.music[props.nextNum].singer}\n        </span>\n      </section>\n      <div className=\"time-line\">\n        <p className=\"current-time\">0</p>\n        <p className=\"duration\">0</p>\n      </div>\n      <audio preload=\"auto\" controls className=\"music-player\" ref={props.player}>\n        <source\n        ref={props.source}\n        src=\"\"\n          type=\"audio/mp3\"\n          // src=\"https://firebasestorage.googleapis.com/v0/b/cilche-prototype.appspot.com/o/music%2FGlen%20Check-84.mp3?alt=media&token=c02e6ed7-ae05-4eb7-824b-15563fd8bc38\"\n        />\n      </audio>\n    </div>\n  );\n};\n\nexport default Main;\n","import \"../styles/setting.scss\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { SettingIprops } from \"../App\";\n\nconst Setting: React.FC<SettingIprops> = function (props): JSX.Element {\n  const history = useHistory();\n  const [isBtn, setIsBtn] = useState(false);\n  return (\n    <div id=\"setting\">\n      <ul>\n        <li\n          onClick={() => {\n            history.push(\"/setting/version\");\n          }}\n        >\n          버전정보\n        </li>\n        <li\n          onClick={() => {\n            history.push(\"/setting/musiclist\");\n          }}\n        >\n          곡정보\n        </li>\n        <li\n          onClick={() => {\n            setIsBtn(!isBtn);\n          }}\n        >\n          로그아웃\n        </li>\n      </ul>\n      { isBtn === true ?  <div className=\"logout-form\">\n        <p>로그아웃 하시겠습니까?</p>\n        <div className=\"btns\">\n        <button  onClick={() => {\n            props.logout();\n          }} className=\"yes\">Yes</button>\n        <button onClick={()=>{\n          setIsBtn(!isBtn);\n        }} className=\"no\">No</button>\n        </div>\n      </div> : null }\n     \n    </div>\n  );\n};\n\nexport default Setting;\n","import \"../styles/version.scss\";\n\nconst Version = function () {\n  return (\n    <div id=\"version\">\n      <h1>*최신 버전입니다.*</h1>\n      <section className=\"item\">\n        <h1>ver - 0.2.1</h1>\n        <p className=\"path-title\">버전내용</p>\n        <p className=\"path-content\">- 오디오 컨트롤러 활성화.</p>\n      </section>\n      <section className=\"item\">\n        <h1>ver - 0.2</h1>\n        <p className=\"path-title\">버전내용</p>\n        <p className=\"path-content\">- 노래저장소 저장기능 추가.(곡정보)</p>\n        <p className=\"path-content\">- 음악재생 기능 추가.</p>\n      </section>\n      <section className=\"item\">\n        <h1>ver - 0.1</h1>\n        <p className=\"path-title\">버전내용</p>\n        <p className=\"path-content\">- 로그인, 회원가입 기능 추가.</p>\n        <p className=\"path-content\">- 설정란 추가.</p>\n      </section>\n    </div>\n  );\n};\n\nexport default Version;\n","import \"../styles/albumEdit.scss\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { AlbumEditIprops } from \"../App\";\n\nconst AlbumEdit: React.FC<AlbumEditIprops> = function (props): JSX.Element {\n  const history = useHistory();\n  const { id } = useParams<{ id: string | undefined }>();\n  const ids = Number(id);\n  return (\n    <div id=\"album-edit\">\n      <header>\n        <i className=\"fas fa-record-vinyl\"></i>\n        <div className=\"album-info\">\n          <span>{props.album[ids].title}</span>\n          <input\n            className=\"album-name\"\n            type=\"text\"\n            placeholder={props.album[ids].title}\n          />\n        </div>\n      </header>\n      <section className=\"music-list\">\n        {props.album[ids].playList.map((playList) => {\n          return (\n            <section className=\"item\">\n              <div className=\"music-info\">\n                <div className=\"image\"></div>\n                <div className=\"meta-info\">\n                  <p>{playList.title}</p>\n                  <span>{playList.singer}</span>\n                </div>\n              </div>\n              <div className=\"edit-icons\">\n                <i className=\"fas fa-minus remove-btn\"></i>\n                <i className=\"far fa-dot-circle drag-btn\"></i>\n              </div>\n            </section>\n          );\n        })}\n      </section>\n      <i\n        onClick={() => {\n          history.push(`/setting/addmusic/${id}`);\n        }}\n        className=\"fas fa-plus plus-album\"\n      ></i>\n    </div>\n  );\n};\n\nexport default AlbumEdit;\n","import \"../styles/musiclist.scss\";\nimport { MusicListIprops } from \"../App\";\nimport { useState } from \"react\";\n\nconst MusicList: React.FC<MusicListIprops> = function (props): JSX.Element {\n  const [isBtn, setIsBtn] = useState(true);\n  return (\n    <div id=\"music-list\">\n      {props.music.map(({ title, singer }) => {\n        return (\n          <section className=\"item\">\n            <div className=\"sing-info\">\n              <div className=\"image\"></div>\n              <div> \n                <p>{title}</p>\n                <span>{singer}</span>\n              </div>\n            </div>\n            <i className=\"fas fa-minus remove-btn\"></i>\n          </section>\n        );\n      })}\n      { isBtn ? <div className=\"panel\">\n      <i className=\"fas fa-times x\" onClick={() => {\n        setIsBtn(!isBtn);\n      }} ></i>\n        <p>제목을 <span>\"가수이름\"-\"노래제목\"</span>으로된 파일을 업로드해주세요!</p>\n      </div> : null}\n      <label id=\"label\" htmlFor=\"music-file\">\n        <i className=\"fas fa-plus plus-music\"></i>\n      </label>\n      <i\n        style={{ display: props.on ? \"block\" : \"none\" }}\n        className=\"fas fa-check plus-music\"\n        onClick={() => {\n          props.upLoadMusic();\n        }}\n      ></i>\n      <input type=\"file\" onChange={props.onChangeMusic} id=\"music-file\" />\n    </div>\n  );\n};\nexport default MusicList;\n","import \"../styles/addMusic.scss\";\nimport { useState } from \"react\";\nimport { AddMusicIprops } from \"../App\";\n\nconst AddMusic: React.FC<AddMusicIprops> = function (props): JSX.Element {\n  const [check, setCheck] = useState(false);\n  return (\n    <div id=\"add-music\">\n      {props.music.map((music) => {\n        return (\n          <section className=\"item\">\n            <div className=\"music-info\">\n              <div className=\"image\"></div>\n              <div>\n                <p>{music.title}</p>\n                <span>{music.singer}</span>\n              </div>\n            </div>\n            <i\n              style={{\n                color: check === true ? \"#698eff\" : \"rgba(0, 0, 0, 0.5)\",\n              }}\n              className=\"fas fa-check check-box\"\n              onClick={() => {\n                setCheck(!check);\n              }}\n            ></i>\n          </section>\n        );\n      })}\n      <i className=\"fas fa-check plus-music\"></i>\n    </div>\n  );\n};\n\nexport default AddMusic;\n","\nimport \"../styles/addAlbum.scss\";\nimport { useHistory } from \"react-router-dom\";\nimport { AddAlbumIprops } from \"../App\";\n\nconst AddAlbum:React.FC<AddAlbumIprops> = function(props):JSX.Element {\n    const history = useHistory();\n\n    return <div id=\"add-album\">\n        <div className=\"album-form\">\n        <i className=\"fas fa-record-vinyl lp\"></i>\n        <div className=\"input-form\">\n        <input type=\"text\" value={props.addAlbumState.name} name=\"name\" onChange={props.onChangeAlbum} placeholder=\"앨범제목\"/>\n        <span>{props.addAlbumState.name}</span>\n        </div>\n        </div>\n        <i onClick={()=>{\n            console.log('앨범 생성!')\n            props.addAlbum();\n            history.push(\"/setting/playlist\")\n        }} className=\"fas fa-check check-box\"></i>\n    </div>\n}\n\nexport default AddAlbum;","import React, { useState, useRef } from \"react\";\nimport \"./App.scss\";\nimport { Route, withRouter, useHistory } from \"react-router-dom\";\nimport firebase from \"./firebase\";\n\n// import Component\nimport SignUp from \"./components/signup\";\nimport Login from \"./components/login\";\nimport Main from \"./components/main\";\nimport Setting from \"./components/setting\";\nimport Version from \"./components/version\";\nimport AlbumEdit from \"./components/albumEdit\";\nimport MusicList from \"./components/musiclist\";\nimport AddMusic from \"./components/addMusic\";\nimport AddAlbum from \"./components/addAlbum\";\n\nimport { DocumentData } from \"@google-cloud/firestore\";\n\n//useState type\ntype AccountType = {\n  email: string;\n  password: string;\n};\ntype PlayListType = {\n  id: number;\n  title: string;\n  info: string;\n  playList: {\n    title: string;\n    singer: string;\n  }[];\n  active: boolean;\n}[];\ntype MusicType = {\n  title: string;\n  singer: string;\n  url: string;\n}[];\ntype AnyType = any;\n\ntype AddAlbumStateType = {\n    name: string;\n    info: string;\n    id: number;\n    playList: {\n      title: string;\n      singer: string;\n    }[];\n    active: boolean;\n  }\n\n// 함수 type\ntype OnChangeType = (e: React.ChangeEvent<HTMLInputElement>) => void;\ntype OnChangeAlbumType = (e: React.ChangeEvent<HTMLInputElement>) => void;\ntype CreateUserType = (email: string, password: string) => void;\ntype LoginType = (email: string, password: string) => void;\ntype LogOutType = () => void;\ntype OnModalType = (id: number) => void;\ntype UpLoadingType = () => void;\ntype AlbumRemoveType = (id: number) => void;\ntype PlayTheMusicType = () => void;\ntype PauseTheMusicType = () => void;\ntype AddAlbumType = () => void;\n\n// export signup.tsx\nexport interface SignUpIprops {\n  createUser: CreateUserType;\n  account: AccountType;\n  onChange: OnChangeType;\n}\n\n//export login.tsx\nexport interface LoginIprops {\n  login: LoginType;\n  account: AccountType;\n  onChange: OnChangeType;\n}\n\n//export playlist.tsx\nexport interface PlayListIprops {\n  album: PlayListType;\n  onModal: OnModalType;\n  albumRemove: AlbumRemoveType;\n}\n\n// export main.tsx\nexport interface MainIprops {\n  album: PlayListType;\n  num: number;\n  nextNum: number;\n  music: MusicType;\n  player: AnyType;\n  source: AnyType;\n}\n\n// Action 컴포넌트 컨트롤러 type\nexport interface ActionIprops {\n  changeAlbum: {\n    nextAlbum: () => void;\n    beforeAlbum: () => void;\n  };\n  changeMusic: {\n    nextMusic: () => void;\n    beforeMusic: () => void;\n  };\n  playTheMusic: PlayTheMusicType;\n  pauseTheMusic: PauseTheMusicType;\n}\n\n// albumEdit.tsx\nexport interface AlbumEditIprops {\n  album: PlayListType;\n  music: MusicType;\n}\n\n// musiclist.tsx\nexport interface MusicListIprops {\n  onChangeMusic: OnChangeType;\n  upLoadMusic: UpLoadingType;\n  on: boolean;\n  music: MusicType;\n}\n\n// setting.tsx\nexport interface SettingIprops {\n  logout: LogOutType;\n}\n\n// addMusic.tsx\nexport interface AddMusicIprops {\n  music: MusicType;\n}\n\n// addAlbum.tsx\nexport interface AddAlbumIprops {\n  album: PlayListType;\n  onChangeAlbum: OnChangeAlbumType;\n  addAlbumState: AddAlbumStateType;\n  addAlbum: AddAlbumType;\n}\n\n// App Component\nfunction App() {\n  const history = useHistory();\n  const [account, setAccount] = useState<AccountType>({ email: \"\", password: \"\" });\n  const { email, password } = account;\n\n  // input.value를 account state에 저장.\n  const onChange: SignUpIprops[\"onChange\"] = function (e) {\n    setAccount({ ...account, [e.target.name]: e.target.value });\n  };\n\n  // 계정만드는 함수.\n  const createUser: SignUpIprops[\"createUser\"] = async function () {\n    await firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        console.log(\"가입 성공!\");\n        setAccount({ email: \"\", password: \"\" });\n        history.replace(\"/\");\n      })\n      .catch(() => {\n        console.log(\"가입 실패!\");\n      });\n  };\n\n  // firebase에서 음악 받아온 보관소.\n  const [music, setMusic] = useState<MusicType>([]);\n\n  // 로그인 함수.\n  const login: LoginIprops[\"login\"] = function (email, password) {\n     firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(async () => {\n        setAccount({ email: \"\", password: \"\" });\n        // 로그인 성공하면 데이터 불러오는 함수.\n        async function getMusic() {\n          let arr: { title: string; singer: string; url: string }[] = [];\n          await firebase\n          .firestore()\n          .collection(\"playList\")\n          .get().then((snapshot) => {\n            snapshot.forEach((doc:DocumentData) => {\n              return arr.push(doc.data());\n            });\n          });\n          await setMusic(arr);\n        }\n       await getMusic();\n        console.log(\"로그인성공!\");\n       await history.push(\"/main\");\n        })\n        .catch(() => {\n          console.log(\"다시 입력해주세요..\");\n        });\n      };\n\n  //로그아웃 함수.\n  const logOut: SettingIprops[\"logout\"] = function () {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        console.log(\"로그아웃 하셨습니다.\");\n        history.replace(\"/\");\n      });\n  };\n\n\n  // Main 컴포넌트 Action 버튼 조절 state.\n  let [num, setNum] = useState<MainIprops[\"num\"]>(0);\n  let [nextNum, setNextNum] = useState<MainIprops[\"nextNum\"]>(0);\n\n  // 나의 앨범 state.\n  const [album, setAlbum] = useState<PlayListType>([\n    {\n      id: 0,\n      title: \"favorite\",\n      info: \"\",\n      playList: [\n        {\n          title: \"Ive got this feeling\",\n          singer: \"Glen Check\",\n        },\n        {\n          title: \"람보르기니\",\n          singer: \"Han Yo Han\",\n        },\n        {\n          title: \"paint it gold\",\n          singer: \"Glen Check\",\n        },\n      ],\n      active: false,\n    },\n    {\n      id: 1,\n      title: \"rock balad\",\n      info: \"\",\n      playList: [\n        {\n          title: \"남자를 몰라\",\n          singer: \"버즈\",\n        },\n        {\n          title: \"YOU\",\n          singer: \"김상민\",\n        },\n        {\n          title: \"가시\",\n          singer: \"buzz\",\n        },\n      ],\n      active: false,\n    },\n  ]);\n\n  // 앨범 추가시킬 state.\n  const [addAlbumState, setAddAlbumState] = useState<AddAlbumIprops['addAlbumState']>({\n      id:3, \n      name:'',\n      playList:[{ title: \"\", singer: \"\" }], \n      info:\"\", \n      active: false \n    });\n    const onChangeAlbum = function(e:React.ChangeEvent<HTMLInputElement>) {\n        const { name, value } = e.target;\n        setAddAlbumState({ ...addAlbumState, [name]: value })\n    }\n    const { id, name, playList, info, active } = addAlbumState;\n \n  // 앨범설정 추가, 삭제 모달.\n  const onModal: OnModalType = function (id) {\n    setAlbum(\n      album.map((list) => {\n        return list.id === id ? { ...list, active: !list.active } : list;\n      })\n    );\n  };\n  // addAlbum state id.\n  let [nextId, setNextId] = useState<number>(3);\n\n  const addAlbum:AddAlbumIprops['addAlbum'] = function() {\n    const item = { title: test.name, id, playList, info, active };\n    setAlbum([ ...album, item ])\n    setAddAlbumState({ id: nextId, name: \"\", playList, info:\"\", active: false });\n    setNextId(nextId + 1);\n  }\n  // 앨범 제거 함수.\n  const albumRemove: PlayListIprops[\"albumRemove\"] = function (id) {\n    setAlbum(\n      album.filter((album) => {\n        return album.id !== id;\n      })\n    );\n  };\n\n  // action playlist up, down 버튼기능.\n  const changeAlbum: ActionIprops[\"changeAlbum\"] = {\n    nextAlbum: function () {\n      if (nextNum < album.length - 1) {\n        setNum(num + 1);\n        player.current.load();\n      } else {\n        return num;\n      }\n    },\n    beforeAlbum: function () {\n      if (num > 0) {\n        setNum(num - 1);\n        player.current.load();\n      } else {\n        return num;\n      }\n    },\n  };\n  // action playlist next, before Music 버튼기능.\n  const changeMusic: ActionIprops[\"changeMusic\"] = {\n    nextMusic: function () {\n      if (nextNum < music.length - 1) {\n        setNextNum(nextNum + 1);\n        player.current.load();\n      } else {\n        return nextNum;\n      }\n    },\n    beforeMusic: function () {\n      if (nextNum > 0) {\n        setNextNum(nextNum - 1);\n        player.current.load();\n      } else {\n        return nextNum;\n      }\n    },\n  };\n  // audio 지정 ref.\n  const player = useRef<AnyType>();\n  const source = useRef<AnyType>();\n\n  // Action 컴포넌트 컨트롤러 플레이 함수.\n  const playTheMusic: PlayTheMusicType = function() {\n    // player.current.load();\n    player.current.play();\n  }\n  const pauseTheMusic: PauseTheMusicType = function() {\n    // player.current.load();\n    player.current.pause();\n  }\n\n  // 음악 저장하고 체크하는 버튼state.\n  const [on, setOn] = useState<MusicListIprops[\"on\"]>(false);\n  // 노래 저장하기.\n  const [musicFile, setFiles] = useState(null);\n  // firebase storage.\n  const storage = firebase.storage();\n  // 음악 파일 받아오는 함수.\n  const onChangeMusic: OnChangeType = (e) => {\n    setFiles(e.target.files[0]);\n    setOn(!on);\n  };\n\n  // 🎵노래 업로드 기능🎵.(firestore에 text로 저장하기)\n  const upLoadMusic: UpLoadingType = function () {\n    const storageRef = storage.ref();\n    const downLoadPath = storageRef.child(\"music/\" + musicFile.name);\n    const upLoading = downLoadPath.put(musicFile);\n    upLoading.on(\n      \"state_changed\",\n      // 변화할 때, 동작하는 함수.\n      (loading) => {\n        // error, loading 타입 변경하기..\n        console.log(\"로딩중..\", loading);\n      },\n      //에러시 동작하는 함수.\n      (error) => {\n        // 타입 변경!!\n        console.log(\"실패사유: \", error);\n      },\n      // 성공시 동작하는 함수.\n      () => {\n        upLoading.snapshot.ref.getDownloadURL().then((url) => {\n          console.log(\"업로드 성공!\");\n          setOn(!on);\n\n          // firestore에 text로 저장.\n          const db = firebase.firestore();\n          db.collection(\"playList\")\n            .doc(musicFile.name)\n            .set({\n              title: musicFile.name.split(\"-\")[1],\n              singer: musicFile.name.split(\"-\")[0],\n              url: url,\n            });\n        });\n      }\n    );\n  };\n\n\n  return (\n    <div className=\"App\">\n      <Nav player={player} source={source} album={album} num={num} nextNum={nextNum} music={music} />\n      <Route exact path=\"/\">\n        <Login login={login} account={account} onChange={onChange} />\n      </Route>\n      <Route path=\"/signup\">\n        <SignUp createUser={createUser} account={account} onChange={onChange} />\n      </Route>\n      <Route path=\"/main\">\n        <Main source={source} player={player} album={album} num={num} nextNum={nextNum} music={music} />\n        <Actions playTheMusic={playTheMusic} pauseTheMusic={pauseTheMusic} changeAlbum={changeAlbum} changeMusic={changeMusic} />\n      </Route>\n\n      <Route exact path=\"/setting\">\n        <Setting logout={logOut} />\n      </Route>\n\n      {/* setting */}\n      <Route path=\"/setting/version\">\n        <Version />\n      </Route>\n      <Route path=\"/setting/playlist/:id\">\n        <AlbumEdit album={album} music={music}/>\n      </Route>\n      <Route path=\"/setting/addmusic/:id\">\n        <AddMusic music={music} />\n      </Route>\n      <Route path=\"/setting/musiclist\">\n        <MusicList\n          onChangeMusic={onChangeMusic}\n          upLoadMusic={upLoadMusic}\n          on={on}\n          music={music}\n        />\n      </Route>\n      <Route path=\"/setting/addalbum\">\n        <AddAlbum album={album} onChangeAlbum={onChangeAlbum} addAlbumState={addAlbumState} addAlbum={addAlbum} />\n      </Route>\n    </div>\n  );\n}\n\nconst Nav: React.FC<MainIprops> = function (props): JSX.Element {\n  const history = useHistory();\n  const [navList, setNavList] = useState([\n    {\n      id: 0,\n      title: \"\",\n      site: \"/main\",\n    },\n    {\n      id: 1,\n      title: \"설정\",\n      site: \"/setting\",\n    },\n \n    {\n      id: 2,\n      title: \"버전정보\",\n      site: \"/setting/version\",\n    },\n    {\n      id: 3,\n      title: \"앨범\",\n      site: \"/setting/playlist\",\n    },\n    {\n      id: 4,\n      title: \"앨범편집\",\n      site: \"/setting/playlist/:id\",\n    },\n    {\n      id: 5,\n      title: \"곡 리스트\",\n      site: \"/setting/musiclist\",\n    },\n    {\n      id: 6,\n      title: \"앨범노래추가\",\n      site: \"/setting/addmusic/:id\",\n    },\n    {\n      id: 7,\n      title: \"앨범추가\",\n      site: \"/setting/addalbum\",\n    }\n  ]);\n  return (\n    <div id=\"nav\">\n      {navList.map((navList) => {\n        return (\n          <Route exact path={navList.site}>\n            <div style={{ width: '20px' }}>\n\n            { navList.site === '/main' ? null:<i\n              onClick={() => {\n                history.goBack();\n              }}\n              className=\"fas fa-chevron-left\"\n              ></i>}\n              </div>\n            <span>\n              {navList.site === \"/main\"\n                ? (navList.title = props.album[props.num].title)\n                : navList.title}\n            </span>\n            <div style={{ width: '20px' }}>\n\n            {navList.site === \"/main\" ?\n              <i\n              onClick={() => {\n                history.push(\"/setting\");\n              }}\n              className=\"fas fa-cog edits\"\n              ></i>  : ( navList.site === \"/setting/playlist/:id\" ? <p className=\"edits\">완료</p> : null)}\n                  </div>\n          </Route>\n        );\n      })}\n    </div>\n  );\n};\n\nconst Actions: React.FC<ActionIprops> = function (props): JSX.Element {\n  const [play, setPlay] = useState(false);\n  \n  return (\n    <div id=\"actions\">\n      <section className=\"up-btn\">\n        <i\n          onClick={() => {\n            props.changeAlbum.beforeAlbum();\n          }}\n          className=\"fas fa-chevron-up\"\n        ></i>\n      </section>\n      <section className=\"middle-btn\">\n        <i\n          onClick={() => {\n            props.changeMusic.beforeMusic();\n          }}\n          className=\"fas fa-chevron-left\"\n        ></i>\n        {play ? (\n          <i\n            onClick={() => {\n              setPlay(!play);\n              props.pauseTheMusic();\n              // 누르면 오디오 플레이 버튼 조작하기.\n            }}\n            className=\"fas fa-pause play-btn pause\"\n          ></i>\n        ) : (\n          <i\n            onClick={() => {\n              setPlay(!play);\n              props.playTheMusic();\n            }}\n            className=\"fas fa-play play-btn play\"\n          ></i>\n        )}\n\n        <i\n          onClick={() => {\n            props.changeMusic.nextMusic();\n          }}\n          className=\"fas fa-chevron-right\"\n        ></i>\n      </section>\n      <section className=\"bottom-btn\">\n        <i\n          onClick={() => {\n            props.changeAlbum.nextAlbum();\n          }}\n          className=\"fas fa-chevron-down\"\n        ></i>\n      </section>\n    </div>\n  );\n};\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"cliche\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}