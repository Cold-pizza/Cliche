{"version":3,"sources":["firebase.tsx","components/signup.tsx","components/login.tsx","components/main.tsx","components/setting.tsx","components/notice.tsx","components/version.tsx","components/playlist.tsx","components/albumEdit.tsx","components/musiclist.tsx","components/addMusic.tsx","components/addAlbum.tsx","App.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","SignUp","props","email","account","password","history","useHistory","id","type","name","value","onChange","placeholder","onClick","createUser","className","replace","StyledLink","styled","Link","Login","login","to","Main","useState","setItem","useEffect","music","source","current","src","nextNum","url","title","singer","preload","controls","ref","player","Setting","isBtn","setIsBtn","push","logout","Notice","Version","PlayList","album","map","info","active","onModal","albumRemove","AlbumEdit","useParams","ids","Number","playList","MusicList","htmlFor","style","display","on","upLoadMusic","onChangeMusic","AddMusic","check","setCheck","color","AddAlbum","test","onChangeAlbum","console","log","addAlbum","Nav","site","navList","exact","path","width","goBack","num","Actions","play","setPlay","changeAlbum","beforeAlbum","changeMusic","beforeMusic","pauseTheMusic","playTheMusic","nextMusic","nextAlbum","withRouter","setAccount","e","target","a","auth","createUserWithEmailAndPassword","then","catch","setMusic","setNum","setNextNum","setAlbum","setTest","nextId","setNextId","length","load","useRef","setOn","musicFile","setFiles","storage","upLoading","child","put","loading","error","snapshot","getDownloadURL","firestore","collection","doc","set","split","arr","get","forEach","data","window","localStorage","JSON","stringify","signInWithEmailAndPassword","getMusic","pause","signOut","list","filter","files","item","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.9b536fca.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORANGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nexport default firebase.initializeApp(firebaseConfig);\r\n","import { SignUpIprops } from \"../App\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"../styles/signup.scss\";\r\n\r\nconst SignUp: React.FC<SignUpIprops> = function (props): JSX.Element {\r\n  const email = props.account.email;\r\n  const password = props.account.password;\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div id=\"sign-up\">\r\n      <h1>회원가입</h1>\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={props.onChange}\r\n          id=\"id\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={props.onChange}\r\n          id=\"password\"\r\n          placeholder=\"PASSWORD\"\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            props.createUser(email, password);\r\n          }}\r\n          className=\"signup-btn\"\r\n        >\r\n          가입하기\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            history.replace(\"/\");\r\n          }}\r\n          className=\"cancel-btn\"\r\n        >\r\n          취소\r\n        </button>\r\n      </form>\r\n      <div className=\"other-signup\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import \"../styles/login.scss\";\r\nimport firebase from \"../firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoginIprops } from \"../App\";\r\nimport styled from \"styled-components\";\r\nconst StyledLink = styled(Link)`\r\n  test-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nconst Login: React.FC<LoginIprops> = function (props): JSX.Element {\r\n  const email = props.account.email;\r\n  const password = props.account.password;\r\n  return (\r\n    <div id=\"login\">\r\n      <section className=\"login-form\">\r\n        <h1>Cliche</h1>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={props.onChange}\r\n          id=\"id\"\r\n          placeholder=\"ID or Email\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={props.onChange}\r\n          id=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            props.login(email, password);\r\n          }}\r\n          className=\"login-btn\"\r\n        >\r\n          로그인\r\n        </button>\r\n        <StyledLink to=\"/signup\">\r\n          <button className=\"signup-btn\">회원가입</button>\r\n        </StyledLink>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import \"../styles/main.scss\";\r\nimport {useState, useEffect, useRef} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MainIprops } from \"../App\";\r\nimport firebase from \"firebase\";\r\nimport { DocumentData } from \"@google-cloud/firestore\";\r\n\r\ntype Item = {\r\n  title: string;\r\n  singer: string;\r\n  url: string;\r\n}[];\r\n\r\nconst Main: React.FC<MainIprops> = function (props): JSX.Element {\r\n  const a = [\"https://firebasestorage.googleapis.com/v0/b/cilche-prototype.appspot.com/o/music%2FGlen%20Check-84.mp3?alt=media&token=c02e6ed7-ae05-4eb7-824b-15563fd8bc38\",\r\n   \"https://firebasestorage.googleapis.com/v0/b/cilche-prototype.appspot.com/o/music%2FGlen%20Check-Ive%20Got%20This%20Feeling.mp3?alt=media&token=08bb4ff6-3911-4326-a499-e32fde1f302a\"]\r\n  // const history = useHistory();\r\n  const [item, setItem] = useState<Item>([]);\r\n  useEffect(()=>{\r\n    if (props.music !== null) {\r\n      setItem(props.music);\r\n    }\r\n  }, [])\r\n  useEffect(()=>{\r\n    props.source.current.src = props.music[props.nextNum].url;\r\n  }, [props.nextNum])\r\n  \r\n  return (\r\n    <div id=\"main\">\r\n      <section className=\"display-music\">\r\n        <div className=\"picture\">앨범을 선택해 주세요!</div>\r\n        <span className=\"title\">\r\n          {props.music[props.nextNum].title}\r\n        </span>\r\n        <span className=\"singer\">\r\n          {props.music[props.nextNum].singer}\r\n        </span>\r\n      </section>\r\n      <audio preload=\"auto\" controls className=\"music-player\" ref={props.player}>\r\n        <source\r\n        ref={props.source}\r\n        src=\"\"\r\n          type=\"audio/mp3\"\r\n          // src=\"https://firebasestorage.googleapis.com/v0/b/cilche-prototype.appspot.com/o/music%2FGlen%20Check-84.mp3?alt=media&token=c02e6ed7-ae05-4eb7-824b-15563fd8bc38\"\r\n        />\r\n      </audio>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import \"../styles/setting.scss\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SettingIprops } from \"../App\";\r\n\r\nconst Setting: React.FC<SettingIprops> = function (props): JSX.Element {\r\n  const history = useHistory();\r\n  const [isBtn, setIsBtn] = useState(false);\r\n  return (\r\n    <div id=\"setting\">\r\n      <ul>\r\n        <li\r\n          onClick={() => {\r\n            history.push(\"/setting/notice\");\r\n          }}\r\n        >\r\n          공지사항\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            history.push(\"/setting/version\");\r\n          }}\r\n        >\r\n          버전정보\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            history.push(\"/setting/musiclist\");\r\n          }}\r\n        >\r\n          곡정보\r\n        </li>\r\n        <li\r\n          onClick={() => {\r\n            history.push(\"/setting/playlist\");\r\n          }}\r\n        >\r\n          앨범설정\r\n        </li>\r\n        <li>계정</li>\r\n        <li>보안</li>\r\n        <li\r\n          onClick={() => {\r\n            setIsBtn(!isBtn);\r\n          }}\r\n        >\r\n          로그아웃\r\n        </li>\r\n      </ul>\r\n      { isBtn === true ?  <div className=\"logout-form\">\r\n        <p>로그아웃 하시겠습니까?</p>\r\n        <div className=\"btns\">\r\n        <button  onClick={() => {\r\n            props.logout();\r\n          }} className=\"yes\">Yes</button>\r\n        <button onClick={()=>{\r\n          setIsBtn(!isBtn);\r\n        }} className=\"no\">No</button>\r\n        </div>\r\n      </div> : null }\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Setting;\r\n","import \"../styles/notice.scss\";\r\n\r\nconst Notice = function () {\r\n  return <div id=\"notice\">\r\n    <section className=\"item\">\r\n      <div className=\"notice-info\">\r\n        <span>21/11/18</span>\r\n        <p>0.1 업데이트 안내</p>\r\n      </div>\r\n      <i className=\"fas fa-angle-down more-btn\"></i>\r\n    </section>\r\n     <section className=\"item\">\r\n      <div className=\"notice-info\">\r\n        <span>21/11/18</span>\r\n        <p>0.1 업데이트 안내</p>\r\n      </div>\r\n      <i className=\"fas fa-angle-down more-btn\"></i>\r\n    </section>\r\n  </div>;\r\n};\r\n\r\nexport default Notice;\r\n","import \"../styles/version.scss\";\r\n\r\nconst Version = function () {\r\n  return (\r\n    <div id=\"version\">\r\n      <h1>*최신 버전입니다.*</h1>\r\n      <section className=\"item\">\r\n        <h1>ver - 0.2</h1>\r\n        <p className=\"path-title\">버전내용</p>\r\n        <p className=\"path-content\">- 노래저장소 저장기능 추가.(곡정보)</p>\r\n        <p className=\"path-content\">- 음악재생 기능 추가.</p>\r\n      </section>\r\n      <section className=\"item\">\r\n        <h1>ver - 0.1</h1>\r\n        <p className=\"path-title\">버전내용</p>\r\n        <p className=\"path-content\">- 로그인, 회원가입 기능 추가.</p>\r\n        <p className=\"path-content\">- 설정란 추가.</p>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Version;\r\n","import \"../styles/playlist.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { PlayListIprops } from \"../App\";\r\n\r\nconst PlayList: React.FC<PlayListIprops> = function (props): JSX.Element {\r\n  const history = useHistory();\r\n  return (\r\n    <div id=\"playlist\">\r\n      {props.album.map(({ id, title, info, active }) => {\r\n        return (\r\n          <section className=\"item\">\r\n            <div className=\"album-info\">\r\n              <i className=\"fas fa-record-vinyl lp\"></i>\r\n              <div className=\"meta-info\">\r\n                <span className=\"title\">{title}</span>\r\n                <span className=\"info\">{info}</span>\r\n              </div>\r\n            </div>\r\n            <i\r\n              onClick={() => {\r\n                props.onModal(id);\r\n              }}\r\n              className=\"fas fa-ellipsis-v more-btn\"\r\n            ></i>\r\n            {active === true ? (\r\n              <div className=\"modal\">\r\n                <p\r\n                  onClick={() => {\r\n                    props.onModal(id);\r\n                    history.push(`/setting/playlist/${id}`);\r\n                  }}\r\n                >\r\n                  편집\r\n                </p>\r\n                <p\r\n                  onClick={() => {\r\n                    props.albumRemove(id);\r\n                  }}\r\n                >\r\n                  제거\r\n                </p>\r\n              </div>\r\n            ) : null}\r\n          </section>\r\n        );\r\n      })}\r\n      <i onClick={()=>{\r\n        history.push(\"/setting/addalbum\")\r\n      }} className=\"fas fa-plus plus-album\"></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayList;\r\n","import \"../styles/albumEdit.scss\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { AlbumEditIprops } from \"../App\";\r\n\r\nconst AlbumEdit: React.FC<AlbumEditIprops> = function (props): JSX.Element {\r\n  const history = useHistory();\r\n  const { id } = useParams<{ id: string | undefined }>();\r\n  const ids = Number(id);\r\n  return (\r\n    <div id=\"albumEdit\">\r\n      <header>\r\n        <i className=\"fas fa-record-vinyl\"></i>\r\n        <div className=\"album-info\">\r\n          <span>{props.album[ids].title}</span>\r\n          <input\r\n            className=\"album-name\"\r\n            type=\"text\"\r\n            placeholder={props.album[ids].title}\r\n          />\r\n        </div>\r\n      </header>\r\n      <section className=\"music-list\">\r\n        {props.album[ids].playList.map((playList) => {\r\n          return (\r\n            <section className=\"item\">\r\n              <div className=\"music-info\">\r\n                <div className=\"image\"></div>\r\n                <div className=\"meta-info\">\r\n                  <p>{playList.title}</p>\r\n                  <span>{playList.singer}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"edit-icons\">\r\n                <i className=\"fas fa-minus remove-btn\"></i>\r\n                <i className=\"far fa-dot-circle drag-btn\"></i>\r\n              </div>\r\n            </section>\r\n          );\r\n        })}\r\n      </section>\r\n      <i\r\n        onClick={() => {\r\n          history.push(`/setting/addmusic/${id}`);\r\n        }}\r\n        className=\"fas fa-plus plus-album\"\r\n      ></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlbumEdit;\r\n","import \"../styles/musiclist.scss\";\r\nimport { MusicListIprops } from \"../App\";\r\n\r\nconst MusicList: React.FC<MusicListIprops> = function (props): JSX.Element {\r\n  return (\r\n    <div id=\"music-list\">\r\n      {props.music.map(({ title, singer }) => {\r\n        return (\r\n          <section className=\"item\">\r\n            <div className=\"sing-info\">\r\n              <div className=\"image\"></div>\r\n              <div>\r\n                <p>{title}</p>\r\n                <span>{singer}</span>\r\n              </div>\r\n            </div>\r\n            <i className=\"fas fa-minus remove-btn\"></i>\r\n          </section>\r\n        );\r\n      })}\r\n\r\n      <label id=\"label\" htmlFor=\"music-file\">\r\n        <i className=\"fas fa-plus plus-music\"></i>\r\n      </label>\r\n      <i\r\n        style={{ display: props.on ? \"block\" : \"none\" }}\r\n        className=\"fas fa-check plus-music\"\r\n        onClick={() => {\r\n          props.upLoadMusic();\r\n        }}\r\n      ></i>\r\n      <input type=\"file\" onChange={props.onChangeMusic} id=\"music-file\" />\r\n    </div>\r\n  );\r\n};\r\nexport default MusicList;\r\n","import \"../styles/addMusic.scss\";\r\nimport { useState } from \"react\";\r\nimport { AddMusicIprops } from \"../App\";\r\n\r\nconst AddMusic: React.FC<AddMusicIprops> = function (props): JSX.Element {\r\n  const [check, setCheck] = useState(false);\r\n  return (\r\n    <div id=\"add-music\">\r\n      {props.music.map((music) => {\r\n        return (\r\n          <section className=\"item\">\r\n            <div className=\"music-info\">\r\n              <div className=\"image\"></div>\r\n              <div>\r\n                <p>{music.title}</p>\r\n                <span>{music.singer}</span>\r\n              </div>\r\n            </div>\r\n            <i\r\n              style={{\r\n                color: check === true ? \"#698eff\" : \"rgba(0, 0, 0, 0.5)\",\r\n              }}\r\n              className=\"fas fa-check check-box\"\r\n              onClick={() => {\r\n                setCheck(!check);\r\n              }}\r\n            ></i>\r\n          </section>\r\n        );\r\n      })}\r\n      <i className=\"fas fa-check plus-music\"></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMusic;\r\n","\r\nimport \"../styles/addAlbum.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AddAlbumIprops } from \"../App\";\r\n\r\nconst AddAlbum:React.FC<AddAlbumIprops> = function(props):JSX.Element {\r\n    const history = useHistory();\r\n\r\n    return <div id=\"add-album\">\r\n        <div className=\"album-form\">\r\n        <i className=\"fas fa-record-vinyl lp\"></i>\r\n        <div className=\"input-form\">\r\n        <input type=\"text\" value={props.test.name} name=\"name\" onChange={props.onChangeAlbum} placeholder=\"앨범제목\"/>\r\n        <span>{props.test.name}</span>\r\n        </div>\r\n        </div>\r\n        <i onClick={()=>{\r\n            console.log('앨범 생성!')\r\n            props.addAlbum();\r\n            history.push(\"/setting/playlist\")\r\n        }} className=\"fas fa-check check-box\"></i>\r\n    </div>\r\n}\r\n\r\nexport default AddAlbum;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./App.scss\";\r\nimport { Route, withRouter, useHistory } from \"react-router-dom\";\r\nimport firebase from \"./firebase\";\r\n// import { DocumentData } from \"firebase/firestore\";\r\n\r\nimport SignUp from \"./components/signup\";\r\nimport Login from \"./components/login\";\r\nimport Main from \"./components/main\";\r\nimport Setting from \"./components/setting\";\r\nimport Notice from \"./components/notice\";\r\nimport Version from \"./components/version\";\r\nimport PlayList from \"./components/playlist\";\r\nimport AlbumEdit from \"./components/albumEdit\";\r\nimport MusicList from \"./components/musiclist\";\r\nimport AddMusic from \"./components/addMusic\";\r\nimport AddAlbum from \"./components/addAlbum\";\r\n\r\nimport FirebaseFirestore, { DocumentData } from \"@google-cloud/firestore\";\r\n\r\n//uesState type\r\ntype Account = {\r\n  email: string;\r\n  password: string;\r\n};\r\ntype PlayListType = {\r\n  id: number;\r\n  title: string;\r\n  info: string;\r\n  playList: {\r\n    title: string;\r\n    singer: string;\r\n  }[];\r\n  active: boolean;\r\n}[];\r\ntype Music = {\r\n  title: string;\r\n  singer: string;\r\n  url: string;\r\n}[];\r\ntype Any = any;\r\n\r\n// 함수 type\r\ntype OnChange = (e: React.ChangeEvent<HTMLInputElement>) => void;\r\ntype OnChangeAlbum = (e: React.ChangeEvent<HTMLInputElement>) => void;\r\ntype CreateUser = (email: string, password: string) => void;\r\ntype LoginType = (email: string, password: string) => void;\r\ntype LogOutType = () => void;\r\ntype OnModal = (id: number) => void;\r\ntype UpLoading = () => void;\r\ntype AlbumRemove = (id: number) => void;\r\ntype PlayTheMusic = () => void;\r\ntype PauseTheMusic = () => void;\r\n\r\n// export signup.tsx\r\nexport interface SignUpIprops {\r\n  createUser: CreateUser;\r\n  account: Account;\r\n  onChange: OnChange;\r\n}\r\n//export login.tsx\r\nexport interface LoginIprops {\r\n  login: LoginType;\r\n  account: Account;\r\n  onChange: OnChange;\r\n}\r\n//export playlist.tsx\r\nexport interface PlayListIprops {\r\n  album: PlayListType;\r\n  onModal: OnModal;\r\n  albumRemove: AlbumRemove;\r\n}\r\n// export main.tsx\r\nexport interface MainIprops {\r\n  album: PlayListType;\r\n  num: number;\r\n  nextNum: number;\r\n  music: Music;\r\n  player: Any;\r\n  source: Any;\r\n}\r\n// action album up, down\r\nexport interface ActionIprops {\r\n  changeAlbum: {\r\n    nextAlbum: () => void;\r\n    beforeAlbum: () => void;\r\n  };\r\n  changeMusic: {\r\n    nextMusic: () => void;\r\n    beforeMusic: () => void;\r\n  };\r\n  playTheMusic: PlayTheMusic;\r\n  pauseTheMusic: PauseTheMusic;\r\n}\r\n// albumEdit.tsx\r\nexport interface AlbumEditIprops {\r\n  album: PlayListType;\r\n}\r\n\r\n// musiclist.tsx\r\nexport interface MusicListIprops {\r\n  onChangeMusic: OnChange;\r\n  upLoadMusic: UpLoading;\r\n  on: boolean;\r\n  music: Music;\r\n}\r\n\r\n// setting.tsx\r\nexport interface SettingIprops {\r\n  logout: LogOutType;\r\n}\r\n// addmusic.tsx\r\nexport interface AddMusicIprops {\r\n  music: Music;\r\n}\r\n// addalbum.tsx\r\nexport interface AddAlbumIprops {\r\n  album: PlayListType;\r\n  onChangeAlbum: OnChangeAlbum;\r\n  test: {\r\n    name: string;\r\n    info: string;\r\n    id: number;\r\n    playList: {\r\n      title: string;\r\n      singer: string;\r\n    }[];\r\n    active: boolean;\r\n  }\r\n  addAlbum: ()=> void;\r\n}\r\n\r\nfunction App() {\r\n  const history = useHistory();\r\n  const [account, setAccount] = useState<Account>({ email: \"\", password: \"\" });\r\n  const { email, password } = account;\r\n\r\n  // input.value를 account state에 저장.\r\n  const onChange: SignUpIprops[\"onChange\"] = function (e) {\r\n    setAccount({ ...account, [e.target.name]: e.target.value });\r\n    // console.log(account);\r\n  };\r\n  // 계정만들기 function\r\n  const createUser: SignUpIprops[\"createUser\"] = async function () {\r\n    await firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        console.log(\"가입 성공!\");\r\n        setAccount({ email: \"\", password: \"\" });\r\n        history.replace(\"/\");\r\n      })\r\n      .catch(() => {\r\n        console.log(\"가입 실패!\");\r\n      });\r\n  };\r\n  // firebase에서 음악 받아온 보관소.\r\n  const [music, setMusic] = useState<Music>([]);\r\n  const [localMusic, setLocalMusic] = useState<Music>([]);\r\n\r\n  // 로그인 기능\r\n  const login: LoginIprops[\"login\"] = function (email, password) {\r\n     firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(async () => {\r\n        setAccount({ email: \"\", password: \"\" });\r\n        async function getMusic() {\r\n          var arr: { title: string; singer: string; url: string }[] = [];\r\n          await firebase\r\n          .firestore()\r\n          .collection(\"playList\")\r\n          .get().then((snapshot) => {\r\n            snapshot.forEach((doc:DocumentData) => {\r\n              return arr.push(doc.data());\r\n            });\r\n          });\r\n          // await console.log(arr);\r\n          await setMusic(arr);\r\n        }\r\n       await getMusic();\r\n        console.log(\"로그인성공!\");\r\n       await history.push(\"/main\");\r\n        })\r\n        .catch(() => {\r\n          console.log(\"다시 입력해주세요..\");\r\n        });\r\n      };\r\n      console.log(music);\r\n  //로그아웃 함수.\r\n  const logOut: SettingIprops[\"logout\"] = function () {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        console.log(\"로그아웃 하셨습니다.\");\r\n        history.replace(\"/\");\r\n      });\r\n  };\r\n\r\n\r\n  // Main Action 버튼 조절 state.\r\n  let [num, setNum] = useState<MainIprops[\"num\"]>(0);\r\n  let [nextNum, setNextNum] = useState<MainIprops[\"nextNum\"]>(0);\r\n\r\n  // 나의 앨범 state.\r\n  const [album, setAlbum] = useState<PlayListType>([\r\n    {\r\n      id: 0,\r\n      title: \"favorite\",\r\n      info: \"glen check, 한요한, 10cm..\",\r\n      playList: [\r\n        {\r\n          title: \"Ive got this feeling\",\r\n          singer: \"Glen Check\",\r\n        },\r\n        {\r\n          title: \"람보르기니\",\r\n          singer: \"Han Yo Han\",\r\n        },\r\n        {\r\n          title: \"paint it gold\",\r\n          singer: \"Glen Check\",\r\n        },\r\n      ],\r\n      active: false,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"rock balad\",\r\n      info: \"buzz, 김상민..\",\r\n      playList: [\r\n        {\r\n          title: \"남자를 몰라\",\r\n          singer: \"버즈\",\r\n        },\r\n        {\r\n          title: \"YOU\",\r\n          singer: \"김상민\",\r\n        },\r\n        {\r\n          title: \"가시\",\r\n          singer: \"buzz\",\r\n        },\r\n      ],\r\n      active: false,\r\n    },\r\n  ]);\r\n  const [test, setTest] = useState<AddAlbumIprops['test']>({ id:3, name:'', playList:[{ title: \"\", singer: \"\" }], info:\"\", active: false });\r\n    const onChangeAlbum = function(e:React.ChangeEvent<HTMLInputElement>) {\r\n        const { name, value } = e.target;\r\n        setTest({ ...test, [name]: value })\r\n    }\r\n    const { id, name, playList, info, active } = test;\r\n \r\n  // 앨범설정 추가, 삭제 모달.\r\n  const onModal: OnModal = function (id) {\r\n    setAlbum(\r\n      album.map((list) => {\r\n        return list.id === id ? { ...list, active: !list.active } : list;\r\n      })\r\n    );\r\n  };\r\n  let [nextId, setNextId] = useState<number>(3);\r\n  const addAlbum:AddAlbumIprops['addAlbum'] = function() {\r\n    const item = { title: test.name, id, playList, info, active };\r\n    setAlbum([ ...album, item ])\r\n    setTest({ id: nextId, name: \"\", playList, info:\"\", active: false });\r\n    setNextId(nextId + 1);\r\n  }\r\n  // 앨범 제거 함수.\r\n  const albumRemove: PlayListIprops[\"albumRemove\"] = function (id) {\r\n    setAlbum(\r\n      album.filter((album) => {\r\n        return album.id !== id;\r\n      })\r\n    );\r\n  };\r\n\r\n  // action playlist up, down 버튼기능.\r\n  const changeAlbum: ActionIprops[\"changeAlbum\"] = {\r\n    nextAlbum: function () {\r\n      if (nextNum < album.length - 1) {\r\n        setNum(num + 1);\r\n        player.current.load();\r\n      } else {\r\n        return num;\r\n      }\r\n    },\r\n    beforeAlbum: function () {\r\n      if (num > 0) {\r\n        setNum(num - 1);\r\n        player.current.load();\r\n      } else {\r\n        return num;\r\n      }\r\n    },\r\n  };\r\n  // action playlist next, before Music 버튼기능.\r\n  const changeMusic: ActionIprops[\"changeMusic\"] = {\r\n    nextMusic: function () {\r\n      if (nextNum < music.length - 1) {\r\n        setNextNum(nextNum + 1);\r\n        player.current.load();\r\n      } else {\r\n        return nextNum;\r\n      }\r\n    },\r\n    beforeMusic: function () {\r\n      if (nextNum > 0) {\r\n        setNextNum(nextNum - 1);\r\n        player.current.load();\r\n      } else {\r\n        return nextNum;\r\n      }\r\n    },\r\n  };\r\n  // audio 지정 ref.\r\n  const player = useRef<Any>();\r\n  const source = useRef<Any>();\r\n\r\n  // 음악 원격 재생 함수.\r\n  const playTheMusic: PlayTheMusic = function() {\r\n    // player.current.load();\r\n    player.current.play();\r\n  }\r\n  const pauseTheMusic: PauseTheMusic = function() {\r\n    // player.current.load();\r\n    player.current.pause();\r\n  }\r\n\r\n  // 음악 저장하고 체크하는 버튼state.\r\n  const [on, setOn] = useState<MusicListIprops[\"on\"]>(false);\r\n  // 노래 저장하기.\r\n  const [musicFile, setFiles] = useState(null);\r\n  // firebase storage.\r\n  const storage = firebase.storage();\r\n  // 음악 파일 받아오는 함수.\r\n  const onChangeMusic: OnChange = (e) => {\r\n    setFiles(e.target.files[0]);\r\n    setOn(!on);\r\n  };\r\n\r\n  // 🎵노래 업로드 기능🎵.(firestore에 text로 저장하기)\r\n  const upLoadMusic: UpLoading = function () {\r\n    const storageRef = storage.ref();\r\n    const downLoadPath = storageRef.child(\"music/\" + musicFile.name);\r\n    const upLoading = downLoadPath.put(musicFile);\r\n    upLoading.on(\r\n      \"state_changed\",\r\n      // 변화할 때, 동작하는 함수.\r\n      (loading) => {\r\n        // error, loading 타입 변경하기..\r\n        console.log(\"로딩중..\" + loading);\r\n      },\r\n      //에러시 동작하는 함수.\r\n      (error) => {\r\n        // 타입 변경!!\r\n        console.log(\"실패사유: \", error);\r\n      },\r\n      // 성공시 동작하는 함수.\r\n      () => {\r\n        upLoading.snapshot.ref.getDownloadURL().then((url) => {\r\n          console.log(\"업로드 성공!\");\r\n          // const item = {\r\n          //   title: musicFile.name.split(\"-\")[1],\r\n          //   singer: musicFile.name.split(\"-\")[0],\r\n          //   url: url,\r\n          // };\r\n          // // firestore에 title,singer,url 보내는거 추가하기.\r\n          // setMusic([...music, item]);\r\n          setOn(!on);\r\n          // setFiles(null);\r\n          // console.log(\"업로드된 경로는\", url);\r\n\r\n          // firestore에 text로 저장.\r\n          const db = firebase.firestore();\r\n          db.collection(\"playList\")\r\n            .doc(musicFile.name)\r\n            .set({\r\n              title: musicFile.name.split(\"-\")[1],\r\n              singer: musicFile.name.split(\"-\")[0],\r\n              url: url,\r\n            });\r\n          // 잘 저장 되었는지 출력.\r\n          // db.collection(\"playList\")\r\n          //   .get()\r\n          //   .then((result) => {\r\n          //     result.forEach((doc) => {\r\n          //       console.log(doc.data());\r\n          //     });\r\n          //   });\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n    useEffect(()=>{\r\n      // 노래 업로드 시킬 때마다 로컬스토리지 업데이트 해주세요~\r\n      var arr: { title: string; singer: string; url: string }[] = [];\r\n      firebase.firestore().collection(\"playList\").get().then((snapshot)=>{\r\n        snapshot.forEach((doc:DocumentData)=> {\r\n          return arr.push(doc.data());\r\n        })\r\n      })\r\n      window.localStorage.setItem(\"playLists\", JSON.stringify(arr));\r\n  }, [upLoadMusic]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav player={player} source={source} album={album} num={num} nextNum={nextNum} music={music} />\r\n      <Route exact path=\"/\">\r\n        <Login login={login} account={account} onChange={onChange} />\r\n      </Route>\r\n      <Route path=\"/signup\">\r\n        <SignUp createUser={createUser} account={account} onChange={onChange} />\r\n      </Route>\r\n      <Route path=\"/main\">\r\n        <Main source={source} player={player} album={album} num={num} nextNum={nextNum} music={music} />\r\n        <Actions playTheMusic={playTheMusic} pauseTheMusic={pauseTheMusic} changeAlbum={changeAlbum} changeMusic={changeMusic} />\r\n      </Route>\r\n\r\n      <Route exact path=\"/setting\">\r\n        <Setting logout={logOut} />\r\n      </Route>\r\n\r\n      {/* setting */}\r\n      <Route path=\"/setting/notice\">\r\n        <Notice />\r\n      </Route>\r\n      <Route path=\"/setting/version\">\r\n        <Version />\r\n      </Route>\r\n      <Route exact path=\"/setting/playlist\">\r\n        <PlayList album={album} onModal={onModal} albumRemove={albumRemove} />\r\n      </Route>\r\n      <Route path=\"/setting/playlist/:id\">\r\n        <AlbumEdit album={album} />\r\n      </Route>\r\n      <Route path=\"/setting/addmusic/:id\">\r\n        <AddMusic music={music} />\r\n      </Route>\r\n      <Route path=\"/setting/musiclist\">\r\n        <MusicList\r\n          onChangeMusic={onChangeMusic}\r\n          upLoadMusic={upLoadMusic}\r\n          on={on}\r\n          music={music}\r\n        />\r\n      </Route>\r\n      <Route path=\"/setting/addalbum\">\r\n        <AddAlbum album={album} onChangeAlbum={onChangeAlbum} test={test} addAlbum={addAlbum} />\r\n      </Route>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Nav: React.FC<MainIprops> = function (props): JSX.Element {\r\n  const history = useHistory();\r\n  const [navList, setNavList] = useState([\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      site: \"/main\",\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"설정\",\r\n      site: \"/setting\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"공지사항\",\r\n      site: \"/setting/notice\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"버전정보\",\r\n      site: \"/setting/version\",\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"앨범\",\r\n      site: \"/setting/playlist\",\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"앨범편집\",\r\n      site: \"/setting/playlist/:id\",\r\n    },\r\n    {\r\n      id: 6,\r\n      title: \"곡 리스트\",\r\n      site: \"/setting/musiclist\",\r\n    },\r\n    {\r\n      id: 7,\r\n      title: \"앨범노래추가\",\r\n      site: \"/setting/addmusic/:id\",\r\n    },\r\n    {\r\n      id: 8,\r\n      title: \"앨범추가\",\r\n      site: \"/setting/addalbum\",\r\n    }\r\n  ]);\r\n  return (\r\n    <div id=\"nav\">\r\n      {navList.map((navList) => {\r\n        return (\r\n          <Route exact path={navList.site}>\r\n            <div style={{ width: '20px' }}>\r\n\r\n            { navList.site === '/main' ? null:<i\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n              className=\"fas fa-chevron-left\"\r\n              ></i>}\r\n              </div>\r\n            <span>\r\n              {navList.site === \"/main\"\r\n                ? (navList.title = props.album[props.num].title)\r\n                : navList.title}\r\n            </span>\r\n            <div style={{ width: '20px' }}>\r\n\r\n            {navList.site === \"/main\" ?\r\n              <i\r\n              onClick={() => {\r\n                history.push(\"/setting\");\r\n              }}\r\n              className=\"fas fa-cog edits\"\r\n              ></i>  : ( navList.site === \"/setting/playlist/:id\" ? <p className=\"edits\">완료</p> : null)}\r\n                  </div>\r\n          </Route>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Actions: React.FC<ActionIprops> = function (props): JSX.Element {\r\n  const [play, setPlay] = useState(false);\r\n  \r\n  return (\r\n    <div id=\"actions\">\r\n      <section className=\"up-btn\">\r\n        <i\r\n          onClick={() => {\r\n            props.changeAlbum.beforeAlbum();\r\n          }}\r\n          className=\"fas fa-chevron-up\"\r\n        ></i>\r\n      </section>\r\n      <section className=\"middle-btn\">\r\n        <i\r\n          onClick={() => {\r\n            props.changeMusic.beforeMusic();\r\n          }}\r\n          className=\"fas fa-chevron-left\"\r\n        ></i>\r\n        {play ? (\r\n          <i\r\n            onClick={() => {\r\n              setPlay(!play);\r\n              props.pauseTheMusic();\r\n              // 누르면 오디오 플레이 버튼 조작하기.\r\n            }}\r\n            className=\"fas fa-pause play-btn pause\"\r\n          ></i>\r\n        ) : (\r\n          <i\r\n            onClick={() => {\r\n              setPlay(!play);\r\n              props.playTheMusic();\r\n            }}\r\n            className=\"fas fa-play play-btn play\"\r\n          ></i>\r\n        )}\r\n\r\n        <i\r\n          onClick={() => {\r\n            props.changeMusic.nextMusic();\r\n          }}\r\n          className=\"fas fa-chevron-right\"\r\n        ></i>\r\n      </section>\r\n      <section className=\"bottom-btn\">\r\n        <i\r\n          onClick={() => {\r\n            props.changeAlbum.nextAlbum();\r\n          }}\r\n          className=\"fas fa-chevron-down\"\r\n        ></i>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename=\"cliche\">\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}