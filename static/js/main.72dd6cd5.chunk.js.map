{"version":3,"sources":["firebase.tsx","components/signup.tsx","components/login.tsx","components/main.tsx","components/setting.tsx","components/notice.tsx","components/version.tsx","components/playlist.tsx","components/albumEdit.tsx","components/musiclist.tsx","components/addMusic.tsx","App.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","SignUp","props","email","account","password","history","useHistory","id","type","name","value","onChange","placeholder","onClick","createUser","className","replace","StyledLink","styled","Link","Login","login","to","Main","album","num","playList","nextNum","title","singer","controls","src","Setting","push","logout","Notice","Version","PlayList","map","info","active","onModal","albumRemove","AlbumEdit","useParams","ids","Number","MusicList","music","htmlFor","style","display","on","upLoadMusic","onChangeMusic","AddMusic","useState","check","setCheck","color","Nav","site","navList","exact","path","goBack","Actions","play","setPlay","changeAlbum","beforeAlbum","changeMusic","beforeMusic","nextMusic","nextAlbum","withRouter","setAccount","e","target","a","auth","createUserWithEmailAndPassword","then","console","log","catch","url","setMusic","useEffect","arr","firestore","collection","get","snapshot","forEach","doc","data","setNum","setNextNum","setAlbum","length","setOn","musicFile","setFiles","storage","useRef","signInWithEmailAndPassword","signOut","list","filter","files","upLoading","ref","child","put","loading","error","getDownloadURL","set","split","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.72dd6cd5.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport * as admin from \"firebase-admin\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORANGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\nexport default firebase.initializeApp(firebaseConfig);\n","import { SignUpIprops } from \"../App\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"../styles/signup.scss\";\n\nconst SignUp: React.FC<SignUpIprops> = function (props): JSX.Element {\n  const email = props.account.email;\n  const password = props.account.password;\n  const history = useHistory();\n\n  return (\n    <div id=\"sign-up\">\n      <h1>회원가입</h1>\n      <form>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={props.onChange}\n          id=\"id\"\n          placeholder=\"Email\"\n        />\n        <input\n          type=\"text\"\n          name=\"password\"\n          value={password}\n          onChange={props.onChange}\n          id=\"password\"\n          placeholder=\"PASSWORD\"\n        />\n        <button\n          onClick={() => {\n            props.createUser(email, password);\n          }}\n          className=\"signup-btn\"\n        >\n          가입하기\n        </button>\n        <button\n          onClick={() => {\n            history.replace(\"/\");\n          }}\n          className=\"cancel-btn\"\n        >\n          취소\n        </button>\n      </form>\n      <div className=\"other-signup\"></div>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import \"../styles/login.scss\";\nimport firebase from \"../firebase\";\nimport { Link } from \"react-router-dom\";\nimport { LoginIprops } from \"../App\";\nimport styled from \"styled-components\";\nconst StyledLink = styled(Link)`\n  test-decoration: none;\n  color: black;\n`;\n\nconst Login: React.FC<LoginIprops> = function (props): JSX.Element {\n  const email = props.account.email;\n  const password = props.account.password;\n  return (\n    <div id=\"login\">\n      <section className=\"login-form\">\n        <h1>Cliche</h1>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={props.onChange}\n          id=\"id\"\n          placeholder=\"ID or Email\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={props.onChange}\n          id=\"password\"\n          placeholder=\"Password\"\n        />\n        <button\n          onClick={() => {\n            props.login(email, password);\n          }}\n          className=\"login-btn\"\n        >\n          로그인\n        </button>\n        <StyledLink to=\"/signup\">\n          <button className=\"signup-btn\">회원가입</button>\n        </StyledLink>\n      </section>\n    </div>\n  );\n};\n\nexport default Login;\n","import \"../styles/main.scss\";\nimport { MainIprops } from \"../App\";\n\nconst Main: React.FC<MainIprops> = function (props): JSX.Element {\n  return (\n    <div id=\"main\">\n      <section className=\"display-music\">\n        <div className=\"picture\">앨범을 선택해 주세요!</div>\n        <span className=\"title\">\n          {props.album[props.num].playList[props.nextNum].title}\n        </span>\n        <span className=\"singer\">\n          {props.album[props.num].playList[props.nextNum].singer}\n        </span>\n      </section>\n      <audio controls className=\"music-player\">\n        <source\n          type=\"audio/mp3\"\n          src=\"https://firebasestorage.googleapis.com/v0/b/cilche-prototype.appspot.com/o/music%2FGlen%20Check-84.mp3?alt=media&token=c02e6ed7-ae05-4eb7-824b-15563fd8bc38\"\n        />\n      </audio>\n    </div>\n  );\n};\n\nexport default Main;\n","import \"../styles/setting.scss\";\nimport { useHistory } from \"react-router-dom\";\nimport { SettingIprops } from \"../App\";\n\nconst Setting: React.FC<SettingIprops> = function (props): JSX.Element {\n  const history = useHistory();\n  return (\n    <div id=\"setting\">\n      <ul>\n        <li\n          onClick={() => {\n            history.push(\"/notice\");\n          }}\n        >\n          공지사항\n        </li>\n        <li\n          onClick={() => {\n            history.push(\"/version\");\n          }}\n        >\n          버전정보\n        </li>\n        <li\n          onClick={() => {\n            history.push(\"/musiclist\");\n          }}\n        >\n          곡정보\n        </li>\n        <li\n          onClick={() => {\n            history.push(\"/playlist\");\n          }}\n        >\n          앨범설정\n        </li>\n        <li>계정</li>\n        <li>보안</li>\n        <li\n          onClick={() => {\n            props.logout();\n          }}\n        >\n          로그아웃\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Setting;\n","const Notice = function () {\n  return <div>공지사항</div>;\n};\n\nexport default Notice;\n","import \"../styles/version.scss\";\n\nconst Version = function () {\n  return (\n    <div id=\"version\">\n      <section className=\"item\">\n        <h1>ver - 0.1</h1>\n        <p className=\"path-title\">버전내용</p>\n        <p className=\"path-content\">- 로그인, 회원가입 기능 추가.</p>\n        <p className=\"path-content\">- 설정란 추가.</p>\n      </section>\n    </div>\n  );\n};\n\nexport default Version;\n","import \"../styles/playlist.scss\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { PlayListIprops } from \"../App\";\n\nconst PlayList: React.FC<PlayListIprops> = function (props): JSX.Element {\n  const history = useHistory();\n  return (\n    <div id=\"playlist\">\n      {props.album.map(({ id, title, info, active }) => {\n        return (\n          <section className=\"item\">\n            <div className=\"album-info\">\n              <i className=\"fas fa-record-vinyl lp\"></i>\n              <div className=\"meta-info\">\n                <span className=\"title\">{title}</span>\n                <span className=\"info\">{info}</span>\n              </div>\n            </div>\n            <i\n              onClick={() => {\n                props.onModal(id);\n              }}\n              className=\"fas fa-ellipsis-v more-btn\"\n            ></i>\n            {active === true ? (\n              <div className=\"modal\">\n                <p\n                  onClick={() => {\n                    props.onModal(id);\n                    history.push(`/playlist/${id}`);\n                  }}\n                >\n                  편집\n                </p>\n                <p\n                  onClick={() => {\n                    props.albumRemove(id);\n                  }}\n                >\n                  제거\n                </p>\n              </div>\n            ) : null}\n          </section>\n        );\n      })}\n      <i className=\"fas fa-plus plus-album\"></i>\n    </div>\n  );\n};\n\nexport default PlayList;\n","import \"../styles/albumEdit.scss\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { AlbumEditIprops } from \"../App\";\n\nconst AlbumEdit: React.FC<AlbumEditIprops> = function (props): JSX.Element {\n  const history = useHistory();\n  const { id } = useParams<{ id: string | undefined }>();\n  const ids = Number(id);\n  return (\n    <div id=\"albumEdit\">\n      <header>\n        <i className=\"fas fa-record-vinyl\"></i>\n        <div className=\"album-info\">\n          <span>{props.album[ids].title}</span>\n          <input\n            className=\"album-name\"\n            type=\"text\"\n            placeholder={props.album[ids].title}\n          />\n        </div>\n      </header>\n      <section className=\"music-list\">\n        {props.album[ids].playList.map((playList) => {\n          return (\n            <section className=\"item\">\n              <div className=\"music-info\">\n                <div className=\"image\"></div>\n                <div className=\"meta-info\">\n                  <p>{playList.title}</p>\n                  <span>{playList.singer}</span>\n                </div>\n              </div>\n              <div className=\"edit-icons\">\n                <i className=\"fas fa-minus remove-btn\"></i>\n                <i className=\"far fa-dot-circle drag-btn\"></i>\n              </div>\n            </section>\n          );\n        })}\n      </section>\n      <i\n        onClick={() => {\n          history.push(`/addmusic/${id}`);\n        }}\n        className=\"fas fa-plus plus-album\"\n      ></i>\n    </div>\n  );\n};\n\nexport default AlbumEdit;\n","import \"../styles/musiclist.scss\";\nimport { MusicListIprops } from \"../App\";\n\nconst MusicList: React.FC<MusicListIprops> = function (props): JSX.Element {\n  return (\n    <div id=\"music-list\">\n      {props.music.map(({ title, singer }) => {\n        return (\n          <section className=\"item\">\n            <div className=\"sing-info\">\n              <div className=\"image\"></div>\n              <div>\n                <p>{title}</p>\n                <span>{singer}</span>\n              </div>\n            </div>\n            <i className=\"fas fa-minus remove-btn\"></i>\n          </section>\n        );\n      })}\n\n      <label id=\"label\" htmlFor=\"music-file\">\n        <i className=\"fas fa-plus plus-music\"></i>\n      </label>\n      <i\n        style={{ display: props.on ? \"block\" : \"none\" }}\n        className=\"fas fa-check plus-music\"\n        onClick={() => {\n          props.upLoadMusic();\n        }}\n      ></i>\n      <input type=\"file\" onChange={props.onChangeMusic} id=\"music-file\" />\n    </div>\n  );\n};\nexport default MusicList;\n","import \"../styles/addMusic.scss\";\nimport { useState } from \"react\";\nimport { AddMusicIprops } from \"../App\";\n\nconst AddMusic: React.FC<AddMusicIprops> = function (props): JSX.Element {\n  const [check, setCheck] = useState(false);\n  return (\n    <div id=\"add-music\">\n      {props.music.map((music) => {\n        return (\n          <section className=\"item\">\n            <div className=\"music-info\">\n              <div className=\"image\"></div>\n              <div>\n                <p>{music.title}</p>\n                <span>{music.singer}</span>\n              </div>\n            </div>\n            <i\n              style={{\n                color: check === true ? \"#698eff\" : \"rgba(0, 0, 0, 0.5)\",\n              }}\n              className=\"fas fa-check check-box\"\n              onClick={() => {\n                setCheck(!check);\n              }}\n            ></i>\n          </section>\n        );\n      })}\n      <i className=\"fas fa-check plus-music\"></i>\n    </div>\n  );\n};\n\nexport default AddMusic;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport \"./App.scss\";\nimport { Route, withRouter, useHistory } from \"react-router-dom\";\nimport firebase from \"./firebase\";\nimport { DocumentData } from \"firebase/firestore\";\n\nimport SignUp from \"./components/signup\";\nimport Login from \"./components/login\";\nimport Main from \"./components/main\";\nimport Setting from \"./components/setting\";\nimport Notice from \"./components/notice\";\nimport Version from \"./components/version\";\nimport PlayList from \"./components/playlist\";\nimport AlbumEdit from \"./components/albumEdit\";\nimport MusicList from \"./components/musiclist\";\nimport AddMusic from \"./components/addMusic\";\n\n//uesState type\ntype Account = {\n  email: string;\n  password: string;\n};\ntype PlayListType = {\n  id: number;\n  title: string;\n  info: string;\n  playList: {\n    title: string;\n    singer: string;\n  }[];\n  active: boolean;\n}[];\ntype Music = {\n  title: string;\n  singer: string;\n  url: string;\n}[];\n\n// 함수 type\ntype OnChange = (e: React.ChangeEvent<HTMLInputElement>) => void;\ntype CreateUser = (email: string, password: string) => void;\ntype LoginType = (email: string, password: string) => void;\ntype LogOutType = () => void;\ntype OnModal = (id: number) => void;\ntype UpLoading = () => void;\ntype AlbumRemove = (id: number) => void;\n\n// export signup.tsx\nexport interface SignUpIprops {\n  createUser: CreateUser;\n  account: Account;\n  onChange: OnChange;\n}\n//export login.tsx\nexport interface LoginIprops {\n  login: LoginType;\n  account: Account;\n  onChange: OnChange;\n}\n//export playlist.tsx\nexport interface PlayListIprops {\n  album: PlayListType;\n  onModal: OnModal;\n  albumRemove: AlbumRemove;\n}\n// export main.tsx\nexport interface MainIprops {\n  album: PlayListType;\n  num: number;\n  nextNum: number;\n  music: Music;\n}\n// action album up, down\nexport interface ActionIprops {\n  changeAlbum: {\n    nextAlbum: () => void;\n    beforeAlbum: () => void;\n  };\n  changeMusic: {\n    nextMusic: () => void;\n    beforeMusic: () => void;\n  };\n}\n// albumEdit.tsx\nexport interface AlbumEditIprops {\n  album: PlayListType;\n}\n\n// musiclist.tsx\nexport interface MusicListIprops {\n  onChangeMusic: OnChange;\n  upLoadMusic: UpLoading;\n  on: boolean;\n  music: Music;\n}\n\n// setting.tsx\nexport interface SettingIprops {\n  logout: LogOutType;\n}\n// addmusic.tsx\nexport interface AddMusicIprops {\n  music: Music;\n}\n\nfunction App() {\n  const history = useHistory();\n  const [account, setAccount] = useState<Account>({ email: \"\", password: \"\" });\n  const { email, password } = account;\n\n  // input.value를 account state에 저장.\n  const onChange: SignUpIprops[\"onChange\"] = function (e) {\n    setAccount({ ...account, [e.target.name]: e.target.value });\n    // console.log(account);\n  };\n  // 계정만들기 function\n  const createUser: SignUpIprops[\"createUser\"] = async function () {\n    await firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        console.log(\"가입 성공!\");\n        setAccount({ email: \"\", password: \"\" });\n        history.replace(\"/\");\n      })\n      .catch(() => {\n        console.log(\"가입 실패!\");\n      });\n  };\n\n  // 로그인 기능\n  const login: LoginIprops[\"login\"] = function (email, password) {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        console.log(\"로그인성공!\");\n        setAccount({ email: \"\", password: \"\" });\n        history.push(\"/main\");\n      })\n      .catch(() => {\n        console.log(\"다시 입력해주세요..\");\n      });\n  };\n\n  //로그아웃 함수.\n  const logOut: SettingIprops[\"logout\"] = function () {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        console.log(\"로그아웃 하셨습니다.\");\n        history.replace(\"/\");\n      });\n  };\n\n  // 음악 보관소.\n  const [music, setMusic] = useState<Music>([\n    {\n      title: \"\",\n      singer: \"\",\n      url: \"\",\n    },\n  ]);\n  // firestore에서 음악 가져오기\n  useEffect(() => {\n    var arr: { title: string; singer: string; url: string }[] = [];\n    firebase\n      .firestore()\n      .collection(\"playList\")\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((doc: DocumentData) => {\n          arr.push(doc.data());\n        });\n      });\n    setMusic(arr);\n  }, []);\n  console.log(music);\n  // const [{ title, singer, url }] = music;\n  // Main Action 버튼 조절 state.\n  let [num, setNum] = useState<MainIprops[\"num\"]>(0);\n  let [nextNum, setNextNum] = useState<MainIprops[\"nextNum\"]>(0);\n\n  // 나의 앨범 state.\n  const [album, setAlbum] = useState<PlayListType>([\n    {\n      id: 0,\n      title: \"favorite\",\n      info: \"glen check, 한요한, 10cm..\",\n      playList: [\n        {\n          title: \"Ive got this feeling\",\n          singer: \"Glen Check\",\n        },\n        {\n          title: \"람보르기니\",\n          singer: \"Han Yo Han\",\n        },\n        {\n          title: \"paint it gold\",\n          singer: \"Glen Check\",\n        },\n      ],\n      active: false,\n    },\n    {\n      id: 1,\n      title: \"rock balad\",\n      info: \"buzz, 김상민..\",\n      playList: [\n        {\n          title: \"남자를 몰라\",\n          singer: \"버즈\",\n        },\n        {\n          title: \"YOU\",\n          singer: \"김상민\",\n        },\n        {\n          title: \"가시\",\n          singer: \"buzz\",\n        },\n      ],\n      active: false,\n    },\n  ]);\n  // 앨범설정 추가, 삭제 모달.\n  const onModal: OnModal = function (id) {\n    setAlbum(\n      album.map((list) => {\n        return list.id === id ? { ...list, active: !list.active } : list;\n      })\n    );\n  };\n  // 앨범 제거 함수.\n  const albumRemove: PlayListIprops[\"albumRemove\"] = function (id) {\n    setAlbum(\n      album.filter((album) => {\n        return album.id !== id;\n      })\n    );\n  };\n\n  // action playlist up, down 버튼기능.\n  const changeAlbum: ActionIprops[\"changeAlbum\"] = {\n    nextAlbum: function () {\n      if (nextNum < album.length - 1) {\n        setNum(num + 1);\n      } else {\n        return num;\n      }\n    },\n    beforeAlbum: function () {\n      if (num > 0) {\n        setNum(num - 1);\n      } else {\n        return num;\n      }\n    },\n  };\n  // action playlist next, before Music 버튼기능.\n  const changeMusic: ActionIprops[\"changeMusic\"] = {\n    nextMusic: function () {\n      if (nextNum < album[num].playList.length - 1) {\n        setNextNum(nextNum + 1);\n      } else {\n        return nextNum;\n      }\n    },\n    beforeMusic: function () {\n      if (nextNum > 0) {\n        setNextNum(nextNum - 1);\n      } else {\n        return nextNum;\n      }\n    },\n  };\n\n  // 음악 저장하고 체크하는 버튼state.\n  const [on, setOn] = useState<MusicListIprops[\"on\"]>(false);\n  // 노래 저장하기.\n  const [musicFile, setFiles] = useState(null);\n  // firebase storage.\n  const storage = firebase.storage();\n  // 음악 파일 받아오는 함수.\n  const onChangeMusic: OnChange = (e) => {\n    setFiles(e.target.files[0]);\n    setOn(!on);\n  };\n\n  // 🎵노래 업로드 기능🎵.\n  const nextId = useRef(-1);\n  const upLoadMusic: UpLoading = function () {\n    const storageRef = storage.ref();\n    const downLoadPath = storageRef.child(\"music/\" + musicFile.name);\n    const upLoading = downLoadPath.put(musicFile);\n    upLoading.on(\n      \"state_changed\",\n      // 변화할 때, 동작하는 함수.\n      (loading) => {\n        console.log(\"로딩중..\" + loading);\n      },\n      //에러시 동작하는 함수.\n      (error) => {\n        console.log(\"실패사유: \", error);\n      },\n      // 성공시 동작하는 함수.\n      () => {\n        upLoading.snapshot.ref.getDownloadURL().then((url) => {\n          console.log(\"업로드 성공!\");\n          // const item = {\n          //   title: musicFile.name.split(\"-\")[1],\n          //   singer: musicFile.name.split(\"-\")[0],\n          //   url: url,\n          // };\n          // // firestore에 title,singer,url 보내는거 추가하기.\n          // setMusic([...music, item]);\n          setOn(!on);\n          // setFiles(null);\n          // console.log(\"업로드된 경로는\", url);\n\n          // firestore에 text로 저장.\n          const db = firebase.firestore();\n          db.collection(\"playList\")\n            .doc(musicFile.name)\n            .set({\n              title: musicFile.name.split(\"-\")[1],\n              singer: musicFile.name.split(\"-\")[0],\n              url: url,\n            });\n          // 잘 저장 되었는지 출력.\n          // db.collection(\"playList\")\n          //   .get()\n          //   .then((result) => {\n          //     result.forEach((doc) => {\n          //       console.log(doc.data());\n          //     });\n          //   });\n        });\n      }\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Nav album={album} num={num} nextNum={nextNum} music={music} />\n      <Route exact path=\"/\">\n        <Login login={login} account={account} onChange={onChange} />\n      </Route>\n      <Route path=\"/signup\">\n        <SignUp createUser={createUser} account={account} onChange={onChange} />\n      </Route>\n      <Route path=\"/main\">\n        <Main album={album} num={num} nextNum={nextNum} music={music} />\n        <Actions changeAlbum={changeAlbum} changeMusic={changeMusic} />\n      </Route>\n\n      <Route path=\"/setting\">\n        <Setting logout={logOut} />\n      </Route>\n\n      {/* setting */}\n      <Route path=\"/notice\">\n        <Notice />\n      </Route>\n      <Route path=\"/version\">\n        <Version />\n      </Route>\n      <Route exact path=\"/playlist\">\n        <PlayList album={album} onModal={onModal} albumRemove={albumRemove} />\n      </Route>\n      <Route path=\"/playlist/:id\">\n        <AlbumEdit album={album} />\n      </Route>\n      <Route path=\"/addmusic/:id\">\n        <AddMusic music={music} />\n      </Route>\n      <Route path=\"/musiclist\">\n        <MusicList\n          onChangeMusic={onChangeMusic}\n          upLoadMusic={upLoadMusic}\n          on={on}\n          music={music}\n        />\n      </Route>\n    </div>\n  );\n}\n\nconst Nav: React.FC<MainIprops> = function (props): JSX.Element {\n  const history = useHistory();\n  const [navList, setNavList] = useState([\n    {\n      id: 0,\n      title: \"\",\n      site: \"/main\",\n    },\n    {\n      id: 1,\n      title: \"설정\",\n      site: \"/setting\",\n    },\n    {\n      id: 2,\n      title: \"공지사항\",\n      site: \"/notice\",\n    },\n    {\n      id: 3,\n      title: \"버전정보\",\n      site: \"/version\",\n    },\n    {\n      id: 4,\n      title: \"앨범\",\n      site: \"/playlist\",\n    },\n    {\n      id: 5,\n      title: \"앨범편집\",\n      site: \"/playlist/:id\",\n    },\n    {\n      id: 6,\n      title: \"곡 리스트\",\n      site: \"/musiclist\",\n    },\n    {\n      id: 7,\n      title: \"앨범노래추가\",\n      site: \"/addmusic/:id\",\n    },\n  ]);\n  return (\n    <div id=\"nav\">\n      {navList.map((navList) => {\n        return (\n          <Route exact path={navList.site}>\n            <i\n              onClick={() => {\n                history.goBack();\n              }}\n              className=\"fas fa-chevron-left\"\n            ></i>\n            <span>\n              {navList.site === \"/main\"\n                ? (navList.title = props.album[props.num].title)\n                : navList.title}\n            </span>\n            {navList.site === \"/playlist/:id\" ? (\n              <p className=\"edits\">완료</p>\n            ) : (\n              <i\n                onClick={() => {\n                  history.push(\"/setting\");\n                }}\n                className=\"fas fa-cog edits\"\n              ></i>\n            )}\n          </Route>\n        );\n      })}\n    </div>\n  );\n};\n\nconst Actions: React.FC<ActionIprops> = function (props): JSX.Element {\n  const [play, setPlay] = useState(false);\n  return (\n    <div id=\"actions\">\n      <section className=\"up-btn\">\n        <i\n          onClick={() => {\n            props.changeAlbum.beforeAlbum();\n          }}\n          className=\"fas fa-chevron-up\"\n        ></i>\n      </section>\n      <section className=\"middle-btn\">\n        <i\n          onClick={() => {\n            props.changeMusic.beforeMusic();\n          }}\n          className=\"fas fa-chevron-left\"\n        ></i>\n        {play ? (\n          <i\n            onClick={() => {\n              setPlay(!play);\n            }}\n            className=\"fas fa-pause play-btn\"\n          ></i>\n        ) : (\n          <i\n            onClick={() => {\n              setPlay(!play);\n            }}\n            className=\"fas fa-play play-btn\"\n          ></i>\n        )}\n\n        <i\n          onClick={() => {\n            props.changeMusic.nextMusic();\n          }}\n          className=\"fas fa-chevron-right\"\n        ></i>\n      </section>\n      <section className=\"bottom-btn\">\n        <i\n          onClick={() => {\n            props.changeAlbum.nextAlbum();\n          }}\n          className=\"fas fa-chevron-down\"\n        ></i>\n      </section>\n    </div>\n  );\n};\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"cliche\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}